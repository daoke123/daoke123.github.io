[{"title":"玩客云宝塔5.9版本","url":"/2020/10/09/11/","content":"第一步宝塔5.9版本wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh\n安装完成后记着账户和密码\n\nip用本地ip上个视频讲过然后安装支持库wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\n接着解压tar zxvf libiconv-1.13.1.tar.gz\n然后输入进入文件夹cd libiconv-1.13.1\n接着输入配置libiconv.&#x2F;configure -prefix&#x3D;&#x2F;usr&#x2F;local\n这个是如果出错输入！！！！！！！！！！！！！！！！！！！！.&#x2F;configure -prefix&#x3D;&#x2F;usr&#x2F;local –build arm-pc-linux 如果失败指定arm机型\n随后编译安装编译安装make\nmake install\n接着输入创建一个文件链接到Libiconv库ln -s &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libiconv.so &#x2F;usr&#x2F;lib\nln -s &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libiconv.so.2 &#x2F;usr&#x2F;lib&#x2F;libiconv.so.2\n以上的全部复制鼠标右键粘贴就行如果安装Apache登录宝塔面板下重新安装Apache 2.4 mysql5.5 php7.x（不要安装5.x）不用下面的\n如果要安装nginx请接着下面不要安装Apache输入返回root目录cd &#x2F;root输入下载提供的nginx.shwget https://www.feiji.work/n1/bt/nginx.sh再输入直接安装sh nginx.sh install随后登录宝塔面板下重新安装nginx1.14 mysql5.5 php7.x\n","categories":["默认分类"]},{"title":"动态域名解析dns","url":"/2020/10/09/12/","content":"https://github.com/NewFuture/DDNS\ngit clone https://github.com/NewFuture/DDNScd DDNS./run.py #运行一次 生成config.json配置文件vi config.json #修改 id 域名 token./task.sh\n\n然后运行命令crontab -e ,将脚本加入定时运行中\ncrontab -e\n\n末尾添加一行（复制后到黑色窗口直接鼠标右键就行）\n*/5 * * * * /root/DDNS/task.sh","categories":["默认分类"],"tags":["DDNS","动态域名解析"]},{"title":"N1 ARMBIAN 固定MAC","url":"/2020/10/10/13/","content":"winscp编辑网卡etc&#x2F;network&#x2F;interfaces，在iface eth0 inet dhcp下添加一行并保存\npre-up ifconfig eth0 hw ether 1A:33:E6:90:1F:27","categories":["默认分类"]},{"title":"Linux VPS流量查看/监测工具 -- vnStat","url":"/2020/10/11/14/","content":"vnstat安装步骤，软件包和编译安装任选一种方法即可使用yum&#x2F;apt-get 软件包管理工具进行安装：（建议使用此方法）\n\nCentOS需要先安装EPEL第三方源，安装好EPEL后执行命令：yum install vnstat 即可安装上vnstat，安装过程可能会要求输入y 进行确认。Fedora安装命令：yum install vnstat 或 dnf install vnstatDebian&#x2F;Ubuntu安装命令：apt-get install vnstat可以ifconfig看看自己的网卡是否是eth0执行一下：vnstat -u -i eth0 创建上对应网卡的数据库，eth0根据前面的说明自己修改网卡。首先，停止 vnStat 服务\nsystemctl stop vnstat\n\n再启动 vnStat 服务\nsystemctl start vnstat\n\nvnstat基本使用命令\nvnstat -l    #显示实时流量vnstat -h    #按小时查询vnstat -d    #按天数查询vnstat -m    #按月数查询vnstat -w    #按周数查询vnstat -t    #查询TOP10\n\n更多命令帮助信息可以 vnstat --help 进行查看。\n","categories":["默认分类"],"tags":["vps命令"]},{"title":"玩客云安装AdGuardHome","url":"/2020/10/12/15/","content":"安装 AdGuard Home\n二进制版本wget https://static.adguard.com/adguardhome/release/AdGuardHome_linux_armv7.tar.gz\ntar -zxvf AdGuardHome_linux_armv7.tar.gz\ncd AdGuardHome\n.&#x2F;AdGuardHome -s install\nLinux 下使用的服务管理器是 systemd 、Upstart 或 SysV，macOS 下使用的服务管理器是 Launchd。AdGuardHome -s install服务安装后好，你可以使用以下命令来管理它。\n启动systemctl start AdGuardHome\n开机自启systemctl enable AdGuardHome\n重启restart AdGuardHome\n停止systemctl stop AdGuardHome\n卸载 AdGuardHome 服务systemctl uninstall AdGuardHome\n","categories":["默认分类"]},{"title":"甜糖 docker 命令","url":"/2020/10/14/16/","content":"docker run -v /mnt/ssd1:/mnts -d --name ttnode --net=host -i -t --privileged=true --restart=always 744287383/linux-arm64-ttnode /start.sh\n第一次执行命令需要下载镜像。如果下载镜像非常慢的，请按下CTRL+C来中断下载，然后再次执行这条命令重新下载 #&#x2F;mnt&#x2F;ssd1为硬盘的挂载路径，:&#x2F;mnts这个冒号和路径的不能改动，ttnode为容器的名字。甜糖容器限制内存的方法（防止机器跑死）：\ndocker update ttnode --memory-swap -1 -m 1080M  \n\n查看是否生效\ndocker stats\n\n查询docker id\ndocker ps -a\n\n设置自动启动容器\ndocker update --restart=always\n\n局域网设备解决办法：连接N1的ssh执行以下命令：docker exec -it ttnode /bin/bash #进入容器的命令，ttnode是容器名。修改成自己的容器的名字/usr/node/ttnode -p /mnts #执行甜糖的命令\n","categories":["默认分类"]},{"title":"N1 armbian 前期基本操作管理","url":"/2020/10/16/17/","content":"常用命令 1.armbian-config 调出窗口配置 2.passwd 修改密码 3.apt install python3-pip 安装软件 4.apt list --installed 列出安装的所有包 5.apt list --installed grep docker列出安装的和docker相关的包 6.apt-get remove docker-ce 删除已安装的软件包（保留配置文件），不会删除依赖软件包，保留配置文件；\n\n7.apt-get purge 删除已安装的软件包（不保留配置文件)，删除软件包，同时删除相应依赖软件包； 8.apt-get autoremove 删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件；高能警告：慎用本命令！！！它会在你不知情的情况下，一股脑删除很多“它认为”你不再使用的软件； 9.apt-get clean 删除已经安装过的的软件安装包；自动将/var/cache/apt/archives/下的所有deb删掉，相当于清理下载的软件安装包； 固定mac N1的mac每次重启都会变化，导致IP不固定，因此要固定mac\nnano /etc/network/interfaces\n\niface eth0 inet dhcp（static）这行下面，加1行：pre-up ifconfig eth0 hw ether 52:d1:87:32:33:eb\n换源——以stretch版本和buster版本为例执行下面的命令\nnano /etc/apt/sources.list\n\n按Delete删除所有内容，并替换内容 如果你的是stretch版本，就换成下面的\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main non-free contribdeb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main non-free contribdeb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main non-free contribdeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main non-free contribdeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main non-free contribdeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main non-free contribdeb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ stretch/updates main non-free contribdeb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ stretch/updates main non-free contrib\n\n如果你是buster版本，就换成下面的\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free\n\n简单常用命令：\n\n更换软件源：\nsed -i ‘s&#x2F;deb.debian.org&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;g’ &#x2F;etc&#x2F;apt&#x2F;sources.listsed -i ‘ssecurity.debian.orgmirrors.tuna.tsinghua.edu.cn&#x2F;debian-securityg’ &#x2F;etc&#x2F;apt&#x2F;sources.listsed -i ‘sapt.armbian.commirrors.tuna.tsinghua.edu.cn&#x2F;armbiang’ &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;armbian.list\n\n\n如果遇到无法拉取 https 源的情况，请先使用 http 源并安装： sudo apt install apt-transport-https ca-certificates 改 armbian 源 注意stretch buster bionic版本\nnano /etc/apt/sources.list.d/armbian.list\n\n以bionic版本为例，将里面的那行注释掉（在前面添加 # ）然后添加这行\ndeb https://mirrors.tuna.tsinghua.edu.cn/armbian bionic main bionic-utils bionic-desktop\n\n按Ctrl+X退出，选择是否保存输入Y，按回车确认 如果你是其他版本（如bullseye），源地址可以在这里查询，根据自己的版本选择即可获得地址 https://mirrors.tuna.tsinghua.edu.cn/help/debian/ 然后执行如下命令（非常重要！非常重要！非常重要！）：\napt update&amp;&amp;apt upgrade -y\n\n作用是更新所有的软件到最新版，无论是以后装宝塔还是装nginx，php，mysql都要先执行这个操作！（当然不用太频繁，太频繁了也没什么可以更新的）执行完之后再装软件一般就不会有什么错了\n开启BBR加速：cat &gt;&gt; /etc/sysctl.conf  /etc/timezone\n\n删除默认 DNS：\nrm /etc/resolvconf/resolv.conf.d/head &amp;&amp; touch /etc/resolvconf/resolv.conf.d/head\n\n注：在重启系统后，输入cat /etc/resolv.conf，查看返回结果是否为你路由器的 DNS，如果是，则表示删除成功，如果不是，则再执行一次删除命令。 安装docker\ncurl -fsSL https://get.docker.com -o get-docker.shsh get-docker.sh --mirror Aliyun\n\n使用上述命令安装会调用阿里云的镜像，安装速度较快。 putty下执行\nmkdir -p /etc/docker\n\ntee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;&#123; &quot;registry-mirrors&quot;: [ &quot;https://mirror.baidubce.com&quot;, &quot;https://registry.docker-cn.com&quot;, &quot;http://hub-mirror.c.163.com&quot;]&#125;EOF\n\nsystemctl daemon-reloadsystemctl restart docker","categories":["默认分类"],"tags":["Armbian","n1"]},{"title":"Linux 格式化硬盘、分区","url":"/2020/10/22/19/","content":"查看当前硬盘\nfdisk -l\n\n格式化硬盘\nmkfs -t ext4 /dev/sdb\n\n分区\nfdisk /dev/sdb\n\n然后按提示输入\nroot@test:/# fdisk /dev/sdbWelcome to fdisk (util-linux 2.27.1).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Command (m for help): nPartition type   p   primary (1 primary, 0 extended, 3 free)   e   extended (container for logical partitions)Select (default p): pPartition number (2-4, default 2): 2First sector (651175056-1953525167, default 651175936): Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (651175936-1953525167, default 1953525167): 1302350111Created a new partition 2 of type &#x27;Linux&#x27; and of size 310.5 GiB.Command (m for help): wqThe partition table has been altered.Calling ioctl() to re-read partition table.\n\n如果遇到提示Re-reading the partition table failed.: Device or resource busy用命令partprobe初始化分区\nmkfs.ext4 /dev/sdb1\n\n挂载到本地\nmount /dev/sdb1 /mnt/disk_1\n\n查看磁盘使用情况\ndf -l\n\n提示partition满了,解决办法把swapper分区删掉(不是一个好办法,但是能解决问题)通过fdisk -l查看哪个是swappswapoff &#x2F;dev&#x2F;sdb*然后通过fdisk &#x2F;dev&#x2F;sdb删掉swapp分区,这样就多了个partition\n","categories":["默认分类"]},{"title":"7ghost 反向代理神器","url":"/2020/11/26/20/","content":"最近发现一个神器叫7ghost,是一款基于PHP的网站反向代理程序。能够快速高效的反向代理所指定的网站。可以做很多事情，比如国外速度较慢的小鸡等,自己去发现吧。\n","categories":["网络资源"],"tags":["7ghost"]},{"title":"Arm Linux二进制程序合集","url":"/2020/11/26/21/","content":"二进制程序真香！\nNging\n安装命令：\nwget -O install.sh http://mouyijun.gitee.io/script/nging.sh &amp;&amp; sudo bash install.sh\n\nCloudreve网盘\n安装命令：\nwget -O install.sh http://mouyijun.gitee.io/script/cloudreve.sh &amp;&amp; sudo bash install.sh\n\nSimple Torrent （BT&#x2F;磁力下载器）\n安装命令：\nwget -O install.sh http://mouyijun.gitee.io/script/simple-torrent.sh &amp;&amp; sudo bash install.sh\n\nFilebrowser（小型文件浏览器）\n安装命令：\nwget -O install.sh http://mouyijun.gitee.io/script/filebrowser.sh &amp;&amp; sudo bash install.sh\n\n转 http://wky.sssin.cn/index.php/120.html\n","categories":["网络资源"],"tags":["n1","二进制","玩客云"]},{"title":"debian shell脚本加入开机启动","url":"/2020/12/12/25/","content":"问题：debian shell脚本加入开机启动\n解决：编辑&#x2F;etc&#x2F;crontab，尾部加入：@reboot root &#x2F;root&#x2F;rules.sh即可，&#x2F;root&#x2F;rules.sh为脚本路径\n样例：\nview source01# /etc/crontab: system-wide crontab02# Unlike any other crontab you don&#x27;t have to run the `crontab&#x27;03# command to install the new version when you edit this file04# and files in /etc/cron.d. These files also have username fields,05# that none of the other crontabs do.06 07SHELL=/bin/sh08PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin09 10# m h dom mon dow user  command1117 *    * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly1225 6    * * *   root    test -x /usr/sbin/anacron  ( cd / &amp;&amp; run-parts --report /etc/cron.daily )1347 6    * * 7   root    test -x /usr/sbin/anacron  ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )1452 6    1 * *   root    test -x /usr/sbin/anacron  ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )15#16@reboot root /root/rules.sh ","categories":["默认分类"]},{"title":"Debian CentOS修改时区","url":"/2020/12/12/26/","content":"Debian CentOS修改时区Debian修改时区：\ndpkg-reconfigure tzdata\nCentOS修改时区：\ntimedatectl set-timezone Asia&#x2F;Shanghai1.首先查看当前语言环境env grep LANG\n2.开始第一步\nexport LANG=en_US.UTF-8注意 en表示语言，US表示国家，UTF-8表示编码\n第二步dpkg-reconfigure localesreboot\n","categories":["默认分类"],"tags":["CentOS","Debian"]},{"title":"甜糖一键部署脚本","url":"/2020/12/13/27/","content":"使用方法\n\n推荐使用 Diskgenius 格式化存储设备为 ext4 格式（近期将支持 exfat 格式，以后可以不用格式化了，当然还是推荐 ext4 性能更高）\n\n使用 FinalShell或者Xshell 通过SSH 进入玩客云&#x2F;N1&#x2F;等 Arm设备，执行以下指令\nwget --no-check-certificate https://cdn.jsdelivr.net/gh/ShallowAi/ttnode@main/install.sh &amp;&amp; chmod +x install.sh &amp;&amp; ./install.sh\n\n\n复制代码按下任意键，开始安装。\n\n若以上内容无报错 且显示了正确的UID和二维码，即搭建完成。\n注意：本脚本默认不修改 MAC（Media Access Control Address） 地址 若你的 MAC 地址在刷机后被覆盖，需要随机 MAC 请使用如下脚本（更新中）\n\n更新日志2020-12-9 发布于恩山.\n","categories":["默认分类"],"tags":["n1","玩客云","arnbian"]},{"title":"speedtest-x","url":"/2020/12/14/28/","content":"apt update &amp;&amp; apt install curlcurl -sSL https://get.docker.com/ shdocker run -d -p 8008:80 badapple9/speedtest-x\n","categories":["默认分类"],"tags":["speedtest"]},{"title":"bbr加速脚本合集","url":"/2020/12/14/29/","content":"wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;chmod +x tcp.sh./tcp.sh\n","categories":["默认分类"],"tags":["bbr","脚本"]},{"title":"n1 Armbian CloudFlare DDNS IPV6","url":"/2020/10/03/3/","content":".&#x2F;install.sh\n……\n# reboot 重启设备# poweroff 关闭设备# apt update &amp;&amp; apt upgrade -y\n\n关闭或重启设备时将U盘拔出,就可以进入安装到 EMMC 的系统了.\n如果要配置和使用无线可以用 nmtui, 至少还有个界面看\n如果没有公网 IP 可以使用 Frp 等工具来打洞: Frp\n有公网就直接上 DDNS 吧,我使用的是 CloudFlare, 一个脚本加定时任务就能搞定:\n#!/bin/bashlocalIpv6=`ip -6 a  grep global  awk &#x27;&#123;print $2&#125;&#x27;  awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27;`echo &quot;ipv6 is: $localIpv6, updating to CloudFlare...&quot;curl -X PUT https://api.cloudflare.com/client/v4/zones/$zone/dns_records/$domain \\  -H &#x27;Content-Type: application/json&#x27; \\  -H &#x27;X-Auth-Email: youremail@example.com&#x27; \\  -H &#x27;X-Auth-Key: yourapikey&#x27; \\  -H &#x27;cache-control: no-cache&#x27; \\  -d &#x27;&#123;&quot;type&quot;: &quot;AAAA&quot;,&quot;proxied&quot;: false,&quot;name&quot;: &quot;example.com&quot;,&quot;content&quot;: &quot;&#x27;$localIpv6&#x27;&quot;&#125;&#x27;\n\ncrontab 加个任务\n*/5 * * * * sh /root/ddns.sh &gt; /dev/null\n\n附件下载CloudFlareddns.zip\n","categories":["默认分类"],"tags":["DDNS","n1","CloudFlare","IPV6"]},{"title":"Linux VPS常用命令集合备忘录","url":"/2020/12/17/30/","content":"Linux VPS常用命令集合备忘录常用命令\n更改root密码\npasswd root\n\nmv命令 移动文件（把abc.tar.gz移动到backup目录）\n\nmv &#x2F; &#x2F;backup\n\nrm删除命令\nrm -rf &#x2F;   \n将会删除&#x2F;目录以及其下所有文件、文件夹  \n-r 就是向下递归，不管有多少级目录，一并删除   \n-f 就是直接强行删除，不作任何提示的意思   \n如文件夹命有空格，需加引号  \n如：rm -rf &#x2F;‘Naughty America SiteRip 4K Part13-sweety’\n\ntar命令 C打包和X解压文件tar zcvf test.tar.gz &#x2F; # 把&#x2F;打包tar zxvf test.tar.gz # 在当前目录解压test.tar.gz\n安装VI编辑器：apt-get install vimi 开始编辑Esc 完成编辑:wq 保存退出:q！ 退出，不保存\n查看硬盘使用时间apt-get install smartmontoolssmartctl -A &#x2F;sdaPower_On_Hours 后面的这个就是通电时间, 单位为小时\nIPV6测试VPSping6ping6PCping -6 2400:da00::6666ping -6\nSSD硬盘测试安装hdparminstall hdparm -y找出对应磁盘的驱动号fdisk -l利用hdparm在指定的硬盘上测试硬盘的读写速度hdparm -t &#x2F;hda\n其它常用cd # 进入某目录 举例：cd &#x2F;ls # 查看当前目录文件echo nameserver 8.8.8.8 &#x2F;resolv.conf #设置dns为Google的lsb_release -a查看系统版本uname -r查看内核uname -a # 查看内核&#x2F;操作系统&#x2F;CPU信息head -n 1 &#x2F;issue # 查看操作系统版本cat &#x2F;cpuinfo # 查看CPU信息hostname # 查看计算机名lspci -tv # 列出所有PCI设备lsusb -tv # 列出所有USB设备lsmod # 列出加载的内核模块env # 查看环境变量\n关闭防火墙&#x2F;Ubuntu 关闭防火墙apt-get remove ufwiptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -FCentOS 关闭防火墙systemctl stop firewalld.servicesystemctl disable firewalld.serviceyum install iptables iptables-servicesiptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -F\n放行端口&#x2F;Ubuntuiptables -I INPUT -p tcp –dport 8888 -j ACCEPTiptables-save安装iptables-persistent使规则持续生效apt-get install iptables-persistentnetfilter-persistent savenetfilter-persistent reloadCentosfirewall-cmd –zone&#x3D;public &#x2F;tcp –permanentfirewall-cmd –reload查看防火墙规则iptables -L\n阿里卸载云盾监控卸载云盾监控wgetsh uninstall.shwgetsh quartz_uninstall.sh删除目录残留pkill aliyun-servicerm -fr &#x2F;agentwatch &#x2F;aliyun-servicerm -rf &#x2F;aegis*\nwget命令安装wget：apt-get updateapt-get install wgetwget –version常用命令：wget命令 下载单个文件wgetwget命令 下载并重命名wget -O xx.zipwget命令 限速下载wget –limit-rate&#x3D;500kwget命令 断点续传wget -cwget命令 后台下载wget -bwget命令 伪装代理名称下载wget –user-agent&#x3D;”&#x2F;5.0 (Windows; U; Windows NT 6.1; en-US) &#x2F;534.16 (KHTML, like Gecko) &#x2F;10.0.648.204 &#x2F;534.16”wget命令 批次下载多个文件wget -i filelist.txt #我们制作一个filelist.txt文件，然后文档中放置多个文件需要下载。一行一个链接文件wget命令 限制送文件大小下载wget -Q5m -i filelist.txt\nTOP命令例：Tasks: 29 total, 1 running, 28 sleeping, 0 stopped, 0 zombieCpu(s): 0.3% us, 1.0% sy, 0.0% ni, 98.7% id, 0.0% wa, 0.0% hi, 0.0% si-——————————- 分割线 ——————————-Tasks: 29 total 进程总数1 running 正在运行的进程数28 sleeping 睡眠的进程数0 stopped 停止的进程数0 zombie 僵尸进程数Cpu(s):0.3% us 用户空间占用CPU百分比1.0% sy 内核空间占用CPU百分比0.0% ni 用户进程空间内改变过优先级的进程占用CPU百分比98.7% id 空闲CPU百分比0.0% wa 等待输入输出的CPU时间百分比0.0% hi0.0% si0.0% wa wa百分比可以大致的体现出当前的磁盘io请求是否频繁；\n如果wa的数量比较大，说明等待输入输出的的io比较多。\n安装UNZIP获取unzip源码wget解压tar zxvf unzip552.tar.gz进入目录cd &#x2F;将Makefile从unix子目录复制到当前目录cp &#x2F;Makefile .&#x2F;安装make genericmake install系统信息arch 显示机器的处理器架构uname -m 显示机器的处理器架构uname -r 显示正在使用的内核版本dmidecode -q 显示硬件系统部件 - (SMBIOS &#x2F; DMI)hdparm -i &#x2F;hda 罗列一个磁盘的架构特性hdparm -tT &#x2F;sda 在磁盘上执行测试性读取操作cat &#x2F;cpuinfo 显示CPU info的信息cat &#x2F;interrupts 显示中断cat &#x2F;meminfo 校验内存使用cat &#x2F;swaps 显示哪些swap被使用cat &#x2F;version 显示内核的版本cat &#x2F;dev 显示网络适配器及统计cat &#x2F;mounts 显示已加载的文件系统lspci -tv 罗列 PCI 设备lsusb -tv 显示 USB 设备date 显示系统日期cal 2007 显示2007年的日历表date 041217002007.00 设置日期和时间 - 月日时分年.秒clock -w 将时间修改保存到 BIOS资源\n\nfree -m # 查看内存使用量和交换区使用量\n\ndf -h # 查看各分区使用情况\n\ndu -sh # 查看指定目录的大小\n\ngrep MemTotal &#x2F;meminfo # 查看内存总量\n\ngrep MemFree &#x2F;meminfo # 查看空闲内存量\n\nuptime # 查看系统运行时间、用户数、负载\n\ncat &#x2F;loadavg # 查看系统负载\n\n\n磁盘和分区\nmount column -t # 查看挂接的分区状态\n\nfdisk -l # 查看所有分区\n\nswapon -s # 查看所有交换分区\n\nhdparm -i &#x2F;hda # 查看磁盘参数(仅适用于IDE设备)\n\ndmesg grep IDE # 查看启动时IDE设备检测状况\n\n\n网络\nifconfig # 查看所有网络接口的属性\n\niptables -L # 查看防火墙设置\n\nroute -n # 查看路由表\n\nnetstat -lntp # 查看所有监听端口\n\nnetstat -antp # 查看所有已经建立的连接\n\nnetstat -s # 查看网络统计信息\n\n\n进程\nps -ef # 查看所有进程\n\ntop # 实时显示进程状态\n\n\n用户\n\nw # 查看活动用户\n\nid &lt;用户名&gt; # 查看指定用户信息\n\nlast # 查看用户登录日志\n\ncut -d: -f1 &#x2F;passwd # 查看系统所有用户\n\ncut -d: -f1 &#x2F;group # 查看系统所有组\n\ncrontab -l # 查看当前用户的计划任务\n\n\n服务\nchkconfig list # 列出所有系统服务\n\nchkconfig list grep on # 列出所有启动的系统服务程序\n\nrpm -qa # 查看所有安装的软件包\n\n\n文件搜索\nfind &#x2F; -name file1 从 ‘&#x2F;‘ 开始进入根文件系统搜索文件和目录  \nfind &#x2F; -user user1 搜索属于用户 ‘user1’ 的文件和目录   \nfind &#x2F;user1 -name *.bin 在目录 ‘&#x2F; &#x2F;user1’ 中搜索带有’.bin’ 结尾的文件  \nfind &#x2F;bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件  \nfind &#x2F;bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件  \nfind &#x2F; -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限   \nfind &#x2F; -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备  \nlocate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令   \nwhereis halt 显示一个二进制文件、源码或man的位置  \nwhich halt 显示一个二进制文件或可执行文件的完整路径\n\n","categories":["默认分类"],"tags":["vps命令"]},{"title":"谷歌云ssh开启root密码登录","url":"/2020/12/17/31/","content":"谷歌云ssh开启root密码登录修改配置1.先选择从浏览器打开ssh连接服务器连接登录成功后，输入以下命令sudo -i #切换到rootpasswd #修改密码然后会要求输入新密码，然后再重复一次密码，输入密码的时候不会显示出来，所以直接输入密码，然后回车，再然后重复输入密码回车。修改root密码完成\n\n2.接着修改SSH配置文件&#x2F;sshd_configvi &#x2F;sshd_config #编辑文件找到以下内容并修改PermitRootLogin yes &#x2F;&#x2F;默认为no，需要开启root用户访问改为yesPasswordAuthentication yes &#x2F;&#x2F;默认为no，改为yes开启密码登陆修改完成后，再下按 esc 键，然后再输入:wq #保存并退出3.最后重启下服务器即可reboot #重启服务器\n修改的时候把输入法切换到英文输入、大小写一定要看清楚再输入、移动光标不要按方向键；“a”是进入编辑模式，“ESC”键是退出编辑模式；非编辑模式下“k”是把光标向上移动、“j”向下、“h”向左、“l”向右；“x”是非编辑模式删除键；编辑模式下一边按着“Shift”上档键一边按着小键盘上的“-”减号键才会出现“_”下划线；修改完成以后在非编辑模式下输入“:wq”回车保存退出，修改错误输入“:q!”回车不保存退出，然后在运行刚才的修改命令重新修改。\n","categories":["网络资源"],"tags":["谷歌云"]},{"title":"Debian8小内存环境安装Caddy+PHP5+SQLite3","url":"/2020/12/17/32/","content":"Debian8小内存环境安装Caddy+PHP5+SQLite30、前言最近入手了Gullo的128M内存小鸡，因为内存太小，故一直在找Debian8能用的一键环境安装脚本，LNMP肯定是安装不上了，编译安装一半的时候，就已经报错了，所以编译安装这条路算是走不通了。\n\n经过多次尝试，发现Caddy-Web-Server-Installer整体来说做的比较好，故研究了下。这个脚本除了没有SQlite3，装好了Caddy+PHP5可以直接用，无需额外设置。\n在Github上，给的脚本安装多次尝试无法成功，重新改了，复制下面的命令行，粘贴到SSH里面回车即可。仅测试了Debian 8 64bit，理论上Debian8 32bit、Debian7 32bit都可以运行这个脚本，包括安装下面的PHP组件和SQLite3数据库，有对应环境的可以尝试下。1、精简系统，你可以选择性尝试执行，并不是强制性这么做，但是的确可以清理少许的内存和磁盘占用，这对小内存vps来说，是很有帮助的，在SSH执行下面的命令即可。apt-get -y update&amp;&amp;apt-get -y upgrade&amp;&amp;apt-get dist-upgrade -y&amp;&amp;apt-get -y purge apache2- bind9- xinetd samba- nscd- portmap sendmail- sasl2-bin&amp;&amp;apt-get -y purge lynx memtester unixodbc python- odbcinst- sudo tcpdump ttf-&amp;&amp;apt-get -y autoremove &amp;&amp; apt-get clean\n2、使用Caddy-Web-Server-Installer安装Caddy+PHP5，既然一键能做的事情，就让脚本完成吧。bash &lt;(curl -L -s https://git.io/JvNd7)如果提示：-bash: curl: command not found请先执行：apt-get -y update&amp;&amp;apt-get install curl -y\n脚本安装完成后，在SSH输入 caddy install 即可开始安装Caddy+PHP5，填入对应信息后，即可安装完成。3、根据需要，安装SQLite3数据库等全部安装成功后，在SSH里面执行：apt-get install -y sqlite php5-sqlite 即可安装SQLite3数据库。4、上传PHP源码路径，和权限设置。安装完成后，上传代码到&#x2F;caddy，即可通过绑定的域名访问。如果是php程序需要安装提示没有权限，那么执行：chown -R caddy:caddy &#x2F;caddy每次更换了源码后或者更新了这个文件夹的文件后，都需要执行chown -R caddy:caddy &#x2F;caddy5、PHP的一些设置（仅Debian8）取消php已禁用的函数：sed -i ‘s@^disable_functions.*@disable_functions &#x3D; passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen@’ &#x2F;php.ini修改时区：sed -i ‘s@^;date.timezone.*@date.timezone &#x3D; &#x2F;Shanghai@’ &#x2F;php.ini脚本占用最大内存16M：sed -i “s@^memory_limit.*@memory_limit &#x3D; 16M@” &#x2F;php.ini6、多域名绑定使用FinalShell或者WinSCP等可视化SSH工具，编辑&#x2F;Caddyfile这个文件。每个域名用英文状态下的中括号包裹着，就能简单的配置多域名绑定，比Nginx看起来简单多了。演示下：{\nroot /gziplog /access.logerrors /error.logfastcgi / 127.0.0.1:9000 phprewrite &#123;    if &#123;path&#125; not_match ^/admin    to &#123;path&#125; &#123;path&#125;/ /index.php?&#123;query&#125; &#125;\n\n}:80 {\ngzipproxy / \n\n}:443 {\nroot /caddygziplog /access.logerrors /error.logfastcgi / 127.0.0.1:9000 phptls .crt .keyproxy /ws localhost:10000 &#123;    websocket    header_upstream -Origin&#125;\n\n}\n简单说下root代表代码存放路径，gzip就是开启gzip压缩，log和errors是日志和错误日志，fastcgi是网关接口，简单说要能解析php，这行就不能少，单纯的反代这行就可以不要。tls 后面可以跟域名的whois邮箱，这样它能帮助你自动申请SSL证书，你也可以填写证书的绝对路径，来获取本地证书。proxy是反向代理， &#x2F;ws 代表路径，你也可以反代为主页，取消ws即可。&#x2F;ws 后面可以跟本地地址+端口，也可以外网网址。v2一键脚本安装后，在v2的配置文件里面有一个端口，你就填在这里面即可。\n注意事项不管是修改了&#x2F;Caddyfile还是修改了&#x2F;php.ini ，都需要重启caddy服务才能生效。Caddy重启命令：caddy restart\n你可以通过caddy help来查看caddy的状态并管理它。\n","categories":["网络资源"],"tags":["Debian","Caddy"]},{"title":"Debian 8安装vnStat统计vps流量","url":"/2021/01/16/35/","content":"安装vnStat\napt-get install vnstat #apt安装vnstat -u -i eth0 #生成流量统计数据库 ‘eth0’用’ip a’命令查看systemctl stop vnstat #停止 vnStat 服务chown vnstat:vnstat &#x2F;var&#x2F;lib&#x2F;vnstat&#x2F;.eth0 #修改 .eth0 文件的权限systemctl start vnstat #启动 vnStat 服务查看流量信息vnstat -l #实时流量vnstat -d #日流量vnstat -m #月流量参考：https://sb.sb/blog/debian-install-vnstat/\n","categories":["默认分类"]},{"title":"VPS性能测试脚本","url":"/2021/01/25/36/","content":"bensh.sh测试的内容包括VPS系统基本信息、全球各知名数据中心的测试点的速度（支持IPv6）以及IO 测试。\n使用方法：\nwget -qO- bench.sh  bash\n\nSuperBench.shSuperBench.sh是在bench.sh的基础上发展而来的，也可以测试VPS系统基本信息和IO性能，不过将测速节点换成了国内节点。\n使用方法：\nwget -qO- git.io/superbench.sh  bash","categories":["默认分类"]},{"title":"lnmp+froxlor","url":"/2021/01/31/37/","content":"安装LNMPwget http://soft.vpser.net/lnmp/lnmp1.7.tar.gz -cO lnmp1.7.tar.gz &amp;&amp; tar zxf lnmp1.7.tar.gz &amp;&amp; cd lnmp1.7 &amp;&amp; .&#x2F;install.sh lnmp\n安装froxlorcd &#x2F;home&#x2F;wwwroot&#x2F;default &amp;&amp; wget https://files.froxlor.org/releases/froxlor-latest.tar.gz &amp;&amp; tar -zxvf froxlor-latest.tar.gz\n访问”ip&#x2F;froxlor”开始安装\n","categories":["默认分类"]},{"title":"GitHub 克隆太慢的解决方法","url":"/2021/02/06/39/","content":"在克隆GitHub上的代码的时候，直接克隆会很慢如\ngit clone https://github.com/lxk0301/jd_scripts.git\n\n只需要在com后面加.cnpmjs.org如\ngit clone https://github.com.cnpmjs.org/lxk0301/jd_scripts.git","categories":["默认分类"]},{"title":"N1 Armbian 安装 docker 并启用 OpenWrt","url":"/2021/02/15/40/","content":"\n安装 docker（这一步建议处于低调上网环境，否则可能会下载慢甚至失败）\ncurl -fsSL https://get.docker.com bash\n\n拉取镜像这里使用的 F 大的镜像，感谢！原帖地址\ndocker pull unifreq&#x2F;openwrt-aarch64\n\n\n默认拉取最新的镜像\n\n打开网卡的混杂模式\nip link set eth0 promisc on\n\n\n复制代码\n\n创建 macvlan 网络\ndocker network create -d macvlan –subnet&#x3D;192.168.x.0&#x2F;24 –gateway&#x3D;192.168.x.1 -o parent&#x3D;eth0 macnet\n\n\n复制代码注意：这里需要根据实际网络来填写网关和子网掩码，如果主路由的 ip 地址为 192.168.0.1，则将上面的 192.168.x 改为 192.168.0\n\n运行 OpenWrt\ndocker run –name op –restart always -d –network macnet –privileged unifreq&#x2F;openwrt-aarch64 &#x2F;sbin&#x2F;init\n\n修改 OpenWrt 的网络设置\ndocker exec -it op bash\n\n\n复制代码\nnano /etc/config/network\n\n修改图中两处红框，第一处修改为需要访问 OpenWrt 的 ip 地址（前三未数字需要和主路由相同，最后一位数字随意修改，不要和其他设备冲突就行）第二出修改为主路由 ip 地址\n退出，保存：（按 ESC 键，输入\n:wq\n\n，回车）\n\n重启 OpenWrt 的网络\n&#x2F;etc&#x2F;init.d&#x2F;network restart\n\n\n复制代码\n\n此时可以在浏览器访问第 6 步中第一个红框处填写的地址访问 OpenWrt默认账户：root，默认密码：password\n设置 OpenWrt9.1 关闭 DHCP网络 -&gt; 接口 -&gt; LAN&#x2F;修改\n\n基础设置\n9.2 关闭桥接物理设置\n保存即可\n到这里 OpenWrt 安装并且已经设置完毕，可以日用了，下面还有一些附加设置可以选择。\n\n设置 armbian 访问 OpenWrt在 armbian 下修改 &#x2F;etc&#x2F;network&#x2F;interfaces 文件，替换为以下内容auto eth0iface eth0 inet staticaddress 192.168.0.xnetmask 255.255.255.0gateway 192.168.0.1\n\nx 代表的是你需要设置的 n1 armbian 系统的 Ip 地址然后重新载入 networkingsystemctl reload networking复制代码如果重载失败，请使用systemctl status networking\n","categories":["默认分类"],"tags":["openwrt"]},{"title":"简单好用的ddns -go","url":"/2021/02/27/41/","content":"docker run -d –name ddns-go –restart&#x3D;always –net&#x3D;host -v &#x2F;opt&#x2F;ddns-go:&#x2F;root jeessy&#x2F;ddns-go\n简单好用的DDNS。自动更新域名解析到公网IP(支持阿里云、腾讯云dnspod、Cloudflare、华为云)\n","categories":["默认分类"]},{"title":"n1用的mini docker openwrt","url":"/2021/02/27/42/","content":"基于openwrt官方19.07.5固件打包制作。\n请勿当路由使用（不包含路由组件），适合做有管理界面的mini Linux跑一些小应用比如京东签到。\n启用混杂模式\nip link set eth0 promisc on\n\n创建虚拟macvlan网卡(IP、网关请根据自己的网络修改)\ndocker network create -d macvlan --subnet=192.168.11.0/24 --gateway=192.168.11.1 -o parent=eth0 macnet\n\n创建openwrt容器\ndocker run -d --restart always --name openwrt --network macnet --privileged 99010/openwrt /sbin/initdocker run --restart always --name openwrt -d --network macnet --privileged sulinggg/openwrt-mini:arm64 /sbin/init\n\n进入容器并修改相关参数\ndocker exec -it openwrt bash\n\n执行此命令后我们便进入 OpenWrt 的命令行界面，首先，我们需要编辑 OpenWrt 的网络配置文件：\nvi /etc/config/network\n\n我们需要更改 Lan 口设置：\nconfig interface &#x27;lan&#x27;        option type &#x27;bridge&#x27;        option ifname &#x27;eth0&#x27;        option proto &#x27;static&#x27;        option ipaddr &#x27;192.168.3.88&#x27;        option netmask &#x27;255.255.255.0&#x27;        option ip6assign &#x27;60&#x27;        option gateway &#x27;192.168.3.1&#x27;        option broadcast &#x27;192.168.3.255&#x27;        option dns &#x27;192.168.3.1&#x27;\n\n6.重启网络\n/etc/init.d/network restart\n\n京东签到的ipk下载\nhttps://github.com/jerrykuku/luci-app-jd-dailybonus\nhttps://hub.docker.com/r/sulinggg/openwrt-mini\n","categories":["默认分类"],"tags":["openwrt"]},{"title":"n1安装甜糖","url":"/2021/03/18/43/","content":"安装甜糖1、插入U盘2、查看U盘挂载情况：lsblk，可以看到sda或者sda1后面MOUNTPOINT下面如果有内容，表示挂载了3、新建目录\nmkdir -p /mntsmkdir -p /usr/node\n\n复制代码4、挂载U盘到&#x2F;mnts&#x2F;\nmount /dev/sda1 /mnts/\n\n5、设置开机自动挂载\n1）查看UUID并记录：blkid /dev/sda1如：aaaaaaaa-75c7-834f-bb69-bbbbbbbbbbbb2）编辑文件/etc/fstab添加一行：UUID=xxxxxxxxxxxx /mnts ext4 defaults 0 0其中xxxxxxxxxxxx为UUID，ext4为U盘的文件格式6、复制甜糖的三个文件 ttnode、log.log、crash_monitor.sh 拖进&#x2F;usr&#x2F;node文件夹，并修改权限为07777、配置开机自启动ssh及运行程序编辑文件/etc/rc.local，在exit 0前添加\nservice sshd start/usr/node/ttnode -p /mnts\n\n8、添加计划任务，守护甜糖\ncrontab -e\n\n在最后面添加一行\n* * * * * /usr/node/crash_monitor.sh\n\n9、重启，并判断是否运行甜糖：ps -efgrep ttnode\n","categories":["默认分类"],"tags":["n1"]},{"title":"一键DD脚本","url":"/2021/04/05/45/","content":"一键DD脚本，支持性好，更智能更全面，支持国内外各种VPS重装，特别是对国内各种访问国外资源慢的VPS安装有奇效。\n20210127：更换部分windows镜像.20210109：更新支持Ubuntu20.04安装,更新几个windows镜像.20200708：更新自动为CN主机使用国内镜像源.\n安装重装系统的前提组件:Debian&#x2F;Ubuntu:\napt-get install -y xz-utils openssl gawk file wget screen &amp;&amp; screen -S osRedHat&#x2F;CentOS:\nyum install -y xz openssl gawk file glibc-common wget screen &amp;&amp; screen -S os如果出现异常，请刷新Mirrors缓存或更换镜像源。RedHat&#x2F;CentOS:\nyum makecache &amp;&amp; yum update -yDebian&#x2F;Ubuntu:\napt update -y &amp;&amp; apt dist-upgrade -y使用:\nwget –no-check-certificate -O AutoReinstall.sh https://git.io/betags &amp;&amp; chmod a+x AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh如为CN主机，可能出现不能下载脚本的问题，可执行以下命令修改hosts，然后再次使用上面的命令\necho “199.232.68.133 raw.githubusercontent.com” &gt;&gt; &#x2F;etc&#x2F;hostsDD安装界面输入Y确认DD后主机自动获取IP，N则自行设置IP 输入N后会自动检测出主机现用IP，如果正确可以按Y确认使用，如不正确则按N自行按正确的输入。DD安装界面-选择系统22合1的系统一键DD选择界面，输入99则使用自定义镜像。 以上系统密码不为默认密码的均为网络收集，如有疑虑使用自己的自定义镜像。\n22合一系统密码：1、CentOS 7.7 (已关闭防火墙及SELinux，默认密码Pwd@CentOS)2、CentOS 7 (默认密码cxthhhhh.com)3、CentOS 8 (默认密码cxthhhhh.com)4、CentOS 6 (默认密码Minijer.com)5、Debian 10 (默认密码Minijer.com)6、Debian 9 (默认密码Minijer.com)7、Debian 8 (默认密码Minijer.com)8、Debian 7 (默认密码Minijer.com)9、Ubuntu 20.04 (默认密码Minijer.com)10、Ubuntu 18.04 (默认密码Minijer.com)11、Ubuntu 16.04 (默认密码Minijer.com)12、Windows Server 2019 (默认密码cxthhhhh.com)13、Windows Server 2016 (默认密码cxthhhhh.com)14、Windows Server 2012 (默认密码cxthhhhh.com)15、Windows Server 2012 Lite (默认密码nat.ee)16、Windows Server 2008 (默认密码cxthhhhh.com)17、Windows Server 2008 Lite (默认密码nat.ee)18、Windows Server 2003 (默认密码Linode)19、Windows Server 2003 Lite (默认密码WinSrv2003x86-Chinese)20、Windows 10 LTSC Lite (默认密码www.nat.ee)21、Windows 7 x86 Lite (默认密码Windows7x86-Chinese)22、Windows 7 Ent Lite (默认密码nat.ee)99、自定义镜像\n注意：经测试在谷歌云原版系统基础上DD会出现自动获取的子网掩码为255.255.255.255,如出现这种情况需要手工输入改正为正确的如255.255.255.0,否则会安装完成离线。\n特别感谢：Vicer、cxt、hiCasper等各位技术大佬的脚本，站长只是脚本的”搬运工”。\n版权申明：以上所有脚本、系统均为网络收集，站长不对资源的安全及版权纠纷负责，如有侵犯您的权益欢迎联系。站长邮箱：minijer#beta.gs(#换成@)转https://git.beta.gs/\n","categories":["网络资源"],"tags":["DD","DD脚本"]},{"title":"MoeClub.org萌咖一键网络重装正式支持 Oracle/甲骨文/亚马逊Amazon","url":"/2021/04/05/46/","content":"原系统请选择 ubuntu16 .(ubuntu18 有点小毛病, 稍后兼容.)支持 debian9+&#x2F;ubuntu16.04+\n为什么不支持 debian8 或更低？网卡驱动原因。\n为什么不支持 新版centos ?不会用centos.\n默认root密码是什么?GeekN.net\n地址: https://moeclub.org/2018/04/03/603/示例: 安装debian9 (甲骨文 -firmware 额外驱动支持)\nbash ","categories":["默认分类"]},{"title":"云大厂资源","url":"/2021/04/05/47/","content":"1.腾讯云 cvm 配置:1h1g1m 期限15天地址：https://cloud.tencent.com/act/free?fromSource=gwzcw.367585.367585.367585 2.华为云ECS 配置: 1h2g1m 7天 2h4g2m 100g 7天地址：https://activity.huaweicloud.com/free_test&#x2F;index.html?utm_source&#x3D;baidu-b 3.阿里云 阿里云新验 配置1h1g1m 40g 期限:30天 芝麻信用大于620分地址：https://free.aliyun.com/ntms/free/personal.html?handle=true 4.天翼云 天翼云新验:1h 1g1m 期限30天地址：https://www.ctyun.cn/activity/?20181220 5.百度智能云: 新**验 1h1g1m 40g 期限30天 每天9:00开抢，数量有限地址：https://cloud.baidu.com/campaign/experience/index.html?from=index-event 6.aws 亚马逊 撸一年EC2 虚拟主机 要信用卡地址：https://aws.amazon.com/cn/free/?sc_channel&#x3D;PS 7.微软云服务azure 撸一年云虚拟服务器地址：http://azure.microsoft.com/zh-cn/free/search/? 8.一元申请微软云服务器 配置4h8g50m 需要身份证地址：https://www.azure.cn/pricing/1rmb-trial-full/\n","categories":["网络资源"]},{"title":"Padavan防火墙ipv6配置","url":"/2021/08/11/48/","content":"防火墙ipv6配置关闭ipv6防火墙\nip6tables -Fip6tables -Xip6tables -P INPUT ACCEPTip6tables -P OUTPUT ACCEPTip6tables -P FORWARD ACCEPT\n\n本机下允许ipv6防火墙特定端口转发\nip6tables -A FORWARD -p tcp --dport 11899 -j ACCEPTip6tables -A FORWARD -p udp --dport 11899 -j ACCEPT\n\n本机开放ipv6防火墙特定端口80&#x2F;443\nip6tables -A INPUT -p tcp --dport 80 -j ACCEPTip6tables -A OUTPUT -p tcp --sport 80 -j ACCEPTip6tables -A INPUT -p tcp --dport 443 -j ACCEPTip6tables -A OUTPUT -p tcp --sport 443 -j ACCEPT\n\n本机服务端口开放 SSH:8622 HTTPS:8623iptables -I INPUT -p tcp --dport 8622 -j ACCEPTiptables -I OUTPUT -p tcp --sport 8622 -j ACCEPTiptables -I INPUT -p tcp --dport 8623 -j ACCEPTiptables -I OUTPUT -p tcp --sport 8623 -j ACCEPTip6tables -I INPUT -p tcp --dport 8622 -j ACCEPTip6tables -I OUTPUT -p tcp --sport 8622 -j ACCEPTip6tables -I INPUT -p tcp --dport 8623 -j ACCEPTip6tables -I OUTPUT -p tcp --sport 8623 -j ACCEPT\n\nNAS服务端口开放 88#iptables -I FORWARD -p tcp -d 192.168.9.10 --dport 88 -j ACCEPT#iptables -I FORWARD -p tcp -s 192.168.9.10 --sport 88 -j ACCEPTip6tables -I FORWARD -p tcp -d 240e:XXXX:XXXX:XXXX:1a8b:15ff:fe16:5f01 --dport 88 -j ACCEPTip6tables -I FORWARD -p tcp -s 240e:XXXX:XXXX:XXXX:1a8b:15ff:fe16:5f01 --sport 88 -j ACCEPT\n\n值班台服务端口开放 80,8080#iptables -I FORWARD -p tcp -d 192.168.9.209 --dport 80 -j ACCEPT#iptables -I FORWARD -p tcp -s 192.168.9.209 --sport 80 -j ACCEPT#iptables -I FORWARD -p tcp -d 192.168.9.209 --dport 8080 -j ACCEPT#iptables -I FORWARD -p tcp -s 192.168.9.209 --sport 8080 -j ACCEPTip6tables -I FORWARD -p tcp -d 240e:XXXX:XXXX:XXXX:f017:f31f:6d5c:79ee --dport 80 -j ACCEPTip6tables -I FORWARD -p tcp -s 240e:XXXX:XXXX:XXXX:f017:f31f:6d5c:79ee --sport 80 -j ACCEPTip6tables -I FORWARD -p tcp -d 240e:XXXX:XXXX:XXXX:f017:f31f:6d5c:79ee --dport 8080 -j ACCEPTip6tables -I FORWARD -p tcp -s 240e:XXXX:XXXX:XXXX:f017:f31f:6d5c:79ee --sport 8080 -j ACCEPT","categories":["默认分类"],"tags":["IPV6","Padavan"]},{"title":"OpenWrt优选IP脚本自动更新","url":"/2021/08/15/49/","content":"https://github.com/Lbingyi/CloudflareST路由器优选IP脚本设置定时更换优选ip用ssh连接软件连接opewrt\n进入root文件夹cd &#x2F;root\n如果是第一次使用，则建议创建新文件夹（后续更新请跳过该步骤）mkdir CloudflareST\n进入文件夹（后续更新，只需要从这里重复下面的下载、解压命令即可）cd CloudflareST\n下载 CloudflareST 压缩包（自行根据需求替换 URL 中版本号和文件名）wget -N https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Lbingyi&#x2F;CloudflareST@main&#x2F;cfst-DNS.tar.gz\n解压（不需要删除旧文件，会直接覆盖，自行根据需求替换 文件名）tar -zxf cfst-DNS.tar.gz\n赋予执行权限chmod +x CloudflareST修改cfst-DNS.sh中的一处地方修改微信&#x2F;Telegram推送token显示不了图片，开一下VPN吧\n","categories":["网络资源"]},{"title":"N1刷入Armbian后换软件源、安装Docker并提速","url":"/2020/10/03/5/","content":"网络环境所限，在使用Armbian的时候经常下载软件出问题，下载不到或者下载中断，所以找来了国内的源，更换一下，下载会变快很多。\n假定armbian已经安装完成\n1、打开putty，输入N1的IP地址连接并登陆\n2、输入命令\nnano /etc/apt/sources.list\n\n复制代码3、在原先的源前面加#号注释掉，并将国内源复制过去\ndeb http://mirrors.ustc.edu.cn/debian stretch main contrib non-freedeb http://mirrors.ustc.edu.cn/debian stretch-updates main contrib non-freedeb http://mirrors.ustc.edu.cn/debian stretch-backports main contrib non-freedeb http://mirrors.ustc.edu.cn/debian-security/ stretch/updates main contrib non-free\n\n复制代码改 armbian 源\nnano /etc/apt/sources.list.d/armbian.list\n\n将里面的那行注释掉（在前面添加 # ）然后添加这行\ndeb https://mirrors.tuna.tsinghua.edu.cn/armbian bionic main bionic-utils bionic-desktop\n\n4、ctrl+x退出编辑，按y回车保存5、执行\napt update &amp;&amp; apt upgrade -y\n\n复制代码\n常用命令：更换软件源：\nsed -i &#x27;s/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g&#x27; /etc/apt/sources.listsed -i &#x27;ssecurity.debian.orgmirrors.tuna.tsinghua.edu.cn/debian-securityg&#x27; /etc/apt/sources.listsed -i &#x27;sapt.armbian.commirrors.tuna.tsinghua.edu.cn/armbiang&#x27; /etc/apt/sources.list.d/armbian.list\n\n复制代码至此，软件源更换完毕。\n6、安装docker\ncurl -fsSL https://get.docker.com -o get-docker.shsh get-docker.sh --mirror Aliyun\n\n复制代码使用上述命令安装会调用阿里云的镜像，安装速度较快。\n7、配置docker镜像加速登陆\ndev.aliyun.com\n\n复制代码进入容器镜像服务，得到镜像加速器地址\n8、putty下执行\nmkdir -p /etc/dockertee /etc/docker/daemon.json ","categories":["默认分类"],"tags":["n1","arnbian","docker"]},{"title":"修改宝塔OneDrive插件API为自己的E5续命","url":"/2021/08/17/50/","content":"地址：https://portal.azure.com/#home\n1：使用@xxx.onmicrosoft.com账号登陆。\n2：点击左边的应用注册\n3：新注册。名称：随意，类型：任何组织目录（两个都可以），重定向 URI：http://localhost/login/authorized\n4：返回主页，点击打开刚注册好的应用，复制：应用程序(客户端) ID\n5：点击客户端凭据，+客户端密码，名称：随意，截至日期：24个月\n6：复制刚新建的客户端密码里面的值\n7：返回主页，打开第3步注册的应用，点击API 权限，点击代表XXX授权管理员同意\n8：宝塔安装好OneDrive插件。已登录的退出登录。\n9：编辑文件&#x2F;www&#x2F;server&#x2F;panel&#x2F;plugin&#x2F;msonedrive&#x2F;credentials.json\n10：修改onedrive-international下面的client_id为第4步复制的应用程序(客户端) ID，修改client_secret为第6步复制的值\n11：保存文件后，正常登录即可。https://hostloc.com/forum.php?mod=viewthread&tid=879895&highlight=e5\n","categories":["默认分类"],"tags":["e5","OneDrive"]},{"title":"甲骨文改成root密码登录","url":"/2021/08/18/51/","content":"防火墙放行全部端口\niptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -F\n\n或者直接删除规则\nrm -rf /etc/iptables/rules.v4rm -rf /etc/iptables/rules.v6\n\n直接删除省事，如果是选择放行端口的话，需要保存修改到文件，不然重启会失效，要么apt-get purge iptables-persistent （不要直接用remove）；\nUbuntu&#x2F;Debian保存修改的iptables规则：\niptables-save &gt; /etc/iptables/rules.v4ip6tables-save &gt; /etc/iptables/rules.v6\n\n个人选择：\niptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -Fiptables-save &gt; /etc/iptables/rules.v4ip6tables-save &gt; /etc/iptables/rules.v6\n\n顺便把开启root密码登录以及更改ssh端口方法也贴这吧：修改root密码，把下面的”密码“替换成你的密码，注意”root:密码“的冒号之后一定不要有空格，比如 root:passwd.hostlocecho root:密码 sudo chpasswd root\n或者直接使用passwd修改密码开启root密码登录sudo sed -i &#x27;s/^#\\?PermitRootLogin.*/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;sudo sed -i &#x27;s/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;\n\n修改ssh端口，假设改ssh端口为65522（可以直接在&#x2F;etc&#x2F;ssh&#x2F;sshd_config中添加 Port 65522，如果没把握，把Port 22（默认一般是注释的）也加上，重启后没问题再注释掉# Port 22）sed -i &#x27;s/#Port 22/Port 65522/&#x27; /etc/ssh/sshd_config\n\n重启sshd服务service ssh restart\n\n检查监听的端口netstat -antp grep ssh\n\n=&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n如果没把握，再处理一遍防火墙iptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPTiptables -Fiptables-save &gt; /etc/iptables/rules.v4ip6tables-save &gt; /etc/iptables/rules.v6\n\n\n","categories":["默认分类"],"tags":["甲骨文"]},{"title":"甲骨文ubuntu20.04安装了宝塔无法打开面板","url":"/2021/08/18/52/","content":"甲骨文其他的系统都可以进，\n就是ubuntu20进不去，防火墙也放行了，甲骨文后台的安全组已经开放全部端口了。打开并登录Xshell自己服务器账号密钥：\n在未root权限输入命令：sudo -i 获取root权限，已root权限服务器可用忽略此步.然后直接复制下列命令\napt-get purge iptables\n\n粘贴Xshell已获得root账号权限命令，按Enter回车键，等待代码加载完毕.\n重启VPS后正常。\n","categories":["网络资源"],"tags":["甲骨文"]},{"title":"定时任务cron表达式的填写规则介绍","url":"/2021/08/21/53/","content":"一、Cron表达式的组成\n其实就是一组时间序列，一个由6个空格7个域组成的字符串，排序如下：\n[秒] [分] [时] [日] [月] [周] [年]\n\n二、Cron每个域（时间）的相关定义，用表格梳理比较明了。域 是否必填 值以及范围 通配符\n秒    是    0-59    , – * /分    是    0-59    , – * /时    是    0-23    , – * /日    是    1-31    , – * ? / L W月    是    1-12 或 JAN-DEC    , – * /周    是    1-7 或 SUN-SAT    , – * ? / L #年    否    1970-2099    , – * /\n\nCron表达式通配符的含义：\n,：表示在两个及以上的时间点中都执行。如在月中的值为1,3，则表示1月和3月都触发事件*：表示匹配该域任意值，可解读为 “每”，如小时的字段为*时，表示每一小时都触发事件?：表示不指定值，用于日期和星期字段之间进行互斥。通常在日期和星期字段中的一个指定值，另外一个用?表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的6号触发一个操作，但不关心是周几，我们可以这么设置 0 0 0 6 * ?-：表示范围，一个连续触发的区间。如：时的值为6-8，则表示6-8小时中的每个小时都触发事件。/：表示间隔时间触发事件（开始时间/时间间隔）。其中第一部分是起始值，除了秒以外都会降低一个单位，比如在 “秒” 上定义 5/10 表示从 第 5 秒开始 每 10 秒执行一次，而在 “分” 上则表示从 第 5 秒开始 每 10 分钟执行一次。#：表示该月第n个星期x(x#n)，仅用星期域。如：星期：6#3，表示该月的第三个星期五。L：表示LAST 最后（最后一天或最后一个星期几）；仅出现在日和星期的域中。用在日则表示该月的最后一天，用在星期则表示该月的最后一个星期X。如：星期域上的值为5L，则表示该月最后一个星期的星期四。在使用&#x27;L&#x27;时，不要指定列表&#x27;,&#x27;或范围&#x27;-&#x27;，否则易导致出现意料之外的结果。W：仅用在日的域中，表示距离当月给定日期最近的工作日（周一到周五）。 如：&quot;4W&quot;表示距离4号最近的工作日（当月的）触发事件； （1）当4号就是工作日时，则表示当天触发；当4号为周六时，则表示3号（周五）触发； （2）当4号为周日时，则表示在5号（周一）触发； 再如：&quot;1W&quot;表示距离1号最近的工作日触发事件，但是，该工作日只算当月的。假如当月1号是周六，则”1W“表示在当月3号（周一）触发事件。就算上个月的最后一天是工作日，也不会触发事件。LW：‘L’和&#x27;W&#x27;可以一起组合在日字段使用。表示当月的最后一个工作日触发事件。\n\n三、举个例子（要足够多）\n*/5 * * * * ? 每隔 5 秒执行一次0 */1 * * * ? 每隔 1 分钟执行一次0 0 2 1 * ? * 每月 1 日的凌晨 2 点执行一次0 15 10 ? * MON-FRI 周一到周五每天上午 10：15 执行作业0 15 10 ? 6L 2002-2006 2002 年至 2006 年的每个月的最后一个星期五上午 10:15 执行作业0 0 23 * * ? 每天 23 点执行一次0 0 1 * * ? 每天凌晨 1 点执行一次0 0 1 1 * ? 每月 1 日凌晨 1 点执行一次0 0 23 L * ? 每月最后一天 23 点执行一次0 0 1 ? * L 每周星期天凌晨 1 点执行一次0 26,29,33 * * * ? 在 26 分、29 分、33 分执行一次0 0 0,13,18,21 * * ? 每天的 0 点、13 点、18 点、21 点都执行一次0 0 10,14,16 * * ? 每天上午 10 点，下午 2 点，4 点执行一次0 0/30 9-17 * * ? 朝九晚五工作时间内每半小时执行一次0 0 12 ? * WED 每个星期三中午 12 点执行一次0 0 12 * * ? 每天中午 12 点触发0 15 10 ? * * 每天上午 10:15 触发0 15 10 * * ? 每天上午 10:15 触发0 15 10 * * ? * 每天上午 10:15 触发0 15 10 * * ? 2005 2005 年的每天上午 10:15 触发0 * 14 * * ? 每天下午 2 点到 2:59 期间的每 1 分钟触发0 0/5 14 * * ? 每天下午 2 点到 2:55 期间的每 5 分钟触发0 0/5 14,18 * * ? 每天下午 2 点到 2:55 期间和下午 6 点到 6:55 期间的每 5 分钟触发0 0-5 14 * * ? 每天下午 2 点到 2:05 期间的每 1 分钟触发0 10,44 14 ? 3 WED 每年三月的星期三的下午 2:10 和 2:44 触发0 15 10 ? * MON-FRI 周一至周五的上午 10:15 触发0 15 10 15 * ? 每月 15 日上午 10:15 触发0 15 10 L * ? 每月最后一日的上午 10:15 触发0 15 10 ? * 6L 每月的最后一个星期五上午 10:15 触发0 15 10 ? * 6L 2002-2005 2002 年至 2005 年的每月的最后一个星期五上午 10:15 触发0 15 10 ? * 6#3 每月的第三个星期五上午 10:15 触发","categories":["网络资源"],"tags":["定时任务"]},{"title":"Debian添加swap","url":"/2021/08/23/54/","content":"查看下Swap的大小\nfree -m\n\n创建一个存放Swap文件的文件夹\nmkdir /opt/swap\n\n生成一个大小为1G，名字是swapfile的文件\ncd /opt/swap &amp;&amp; dd if=/dev/zero of=swapfile bs=1024 count=1048576\n\n文件转换成swap并且激活\nmkswap swapfile &amp;&amp; swapon /opt/swap/swapfile\n\n设置开机自动挂载 nano &#x2F;etc&#x2F;fstab 添加\n/opt/swap/swapfile swap swap defaults 0 0","categories":["默认分类"],"tags":["Debian"]},{"title":"安装AdGuardHome","url":"/2021/08/24/55/","content":"安装AdGuardHome\nwget https://static.adguard.com/adguardhome/release/AdGuardHome_linux_arm.tar.gz#进入AdGuardHome目录cd AdGuardHome#放行3000端口（AdGuardHome初始化需要使用）#firewalld放行3000端口firewall-cmd --zone=public --add-port=3000/tcp --permanentfirewall-cmd --reload#iptables放行3000端口iptables -A INPUT -p tcp --dport 3000 -j ACCEPTservice iptables save#启动AdGuard Home./AdGuardHome -s install\n\n下面是控制服务可能需要的其他命令。\n./AdGuardHome -s uninstall- 卸载 AdGuard 家庭服务。./AdGuardHome -s start- 启动服务。./AdGuardHome -s stop- 停止服务。./AdGuardHome -s restart- 重新启动服务。./AdGuardHome -s status- 显示当前服务状态","categories":["网络资源"],"tags":["AdGuardHome"]},{"title":"老毛子固件DNSMASQ优化：AdGuardHome外挂服务","url":"/2021/08/26/56/","content":"AdGuardHome\n表示对以下设置的所有server发起查询#选择回应最快的一条作为查询结果返回\nall-serversserver=192.168.2.2#5533 #AdGuardHomedns-forward-max=1000 #AdGuardHome\n\n\n","categories":["默认分类"],"tags":["AdGuardHome","老毛子"]},{"title":"Github+jsDelivr为图片文件加速","url":"/2021/08/26/57/","content":"https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/ 即可访问你的内容了！如本文示例：https://cdn.jsdelivr.net/gh/malaohu/jscdn@1.0&#x2F;文件不想带版本号？将版本号换成latest即可！或者不带版本号！或者直接@master(或者其他分支名称)！\n如：\nhttps://cdn.jsdelivr.net/gh/malaohu/jscdn@latest/pic.pnghttps://cdn.jsdelivr.net/gh/malaohu/jscdn/pic.pnghttps://cdn.jsdelivr.net/gh/malaohu/jscdn@master/pic.png\n\n直接@master，就不用新建releases了！\n","categories":["默认分类","网络资源"],"tags":["Github","jsDelivr"]},{"title":"水星摄像头","url":"/2021/08/28/58/","content":"高清\nrtsp://admin:123456@192.168.2.3:554/stream1\n\n一般\nrtsp://admin:123456@192.168.2.3:554/stream2","categories":["默认分类"]},{"title":"腾讯云DD 系统","url":"/2021/08/30/59/","content":"萌咖脚本（debian10）：\n全自动安装默认用户：root密码: MoeClub.org某些特殊的服务商不适用此脚本，比如 cloudcone已测试服务商：腾讯云、阿里云# Debian/Ubuntu:apt-get updateapt-get install -y xz-utils openssl gawk file&lt;!-- more --&gt;# RedHat/CentOS:yum updateyum install -y xz openssl gawk filewget https://moeclub.org/attachment/LinuxShell/InstallNET.shchmod a+x InstallNET.shbash InstallNET.sh -d 10 -v 64 -a\n\n系统选择详解：# 全自动安装Ubuntu 16.04 x64： bash InstallNET.sh -u 16.04 -v 64 -a# 全自动安装Debian 9 x64：bash InstallNET.sh -d 9 -v 64 -a# 全自动安装Debian 10 x64(中科大镜像源，用于国内服务器)： bash InstallNET.sh -d 10 -v 64 -a --mirror &#x27;http://mirrors.ustc.edu.cn/debian/&#x27;# 全自动安装CentOS 6.7 x64：bash InstallNET.sh -c 6.7 -v 64 -a\n\n腾讯云轻量 DD winapt-get updateapt-get install -y xz-utils openssl gawk file wget screen &amp;&amp; screen -S oswget --no-check-certificate -qO InstallNET.sh &#x27;https://tutu.bid/bash/InstallNET.sh&#x27; &amp;&amp; bash InstallNET.sh -dd &#x27;https://tutu.bid/os/dd/win10ltsc_x64.tar.gz&#x27;","categories":["默认分类"],"tags":["DD","DD脚本","腾讯云"]},{"title":"Screen命令安装使用教程","url":"/2021/08/31/60/","content":"CentOS系统执行以下命令安装：\nyum install screen\n\nDebian&#x2F;Ubuntu系统执行以下命令安装：\napt-get install screen\n\n如何使用screen命令首先创建screen会话，执行以下命令：\nscreen -S lnmp\n\nscreen就会创建一个名字为lnmp的会话。然后就可以运行下载安装lnmp的命令了。\n如果有事离开关闭电脑，可以用快捷键Ctrl+a d(即按住Ctrl，依次再按a,d)，而会话中的程序不会关闭，仍在运行。在实际使用中都是用鼠标点击右上角的X来关闭SSH软件的，也是没问题的。\n恢复screen会话。回来时可以再执行：\nscreen -r lnmp\n\n即可恢复到离开前创建的lnmp会话的工作界面。\n","categories":["默认分类","网络资源"],"tags":["screen"]},{"title":"IPV6用Warp配置IPv4","url":"/2021/09/10/61/","content":"# 安装wireguardapt update -y &amp;&amp; apt install wireguard sudo curl vim openresolv -y# 安装wgcfcurl -fsSL git.io/wgcf.sh | sudo bash# 注册账户wgcf register# 生成配置文件wgcf generate# 编辑配置文件vim wgcf-profile.conf# 将配置文件的DNS、AllowedIPs、Endpoint，如下[Interface]PrivateKey = 这里会自动生成Address = 172.16.0.2/32Address = 这里会自动生成DNS = 8.8.8.8,8.8.4.4,2001:4860:4860::8888,2001:4860:4860::8844MTU = 1280[Peer]PublicKey = bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=AllowedIPs = 0.0.0.0/0Endpoint = [2606:4700:d0::a29f:c001]:2408# 复制配置文件到wireguard文件夹cp wgcf-profile.conf /etc/wireguard/wgcf.conf# 尝试启动 wireguardwg-quick up wgcf# 测试ping google.com -4# 关闭wgcf接口wg-quick down wgcf# 加入开机启动systemctl start wg-quick@wgcfsystemctl enable wg-quick@wgcf# 默认v6优先级# 编辑文件 /etc/gai.conf，将 label 2002::/16 2 的注释删除","categories":["默认分类"],"tags":["ipv6","Warp"]},{"title":"青龙","url":"/2021/11/25/64/","content":"docker run -dit \\  -v $PWD/ql/config:/ql/config \\  -v $PWD/ql/log:/ql/log \\  -v $PWD/ql/db:/ql/db \\  -v $PWD/ql/repo:/ql/repo \\  -v $PWD/ql/raw:/ql/raw \\  -v $PWD/ql/scripts:/ql/scripts \\  -p 5555:5700 \\  --name qinglong \\  --hostname qinglong \\  --restart unless-stopped \\  whyour/qinglong:latest","categories":["默认分类"]},{"title":"4行命令，设置80和443只允许CF访问，防止被扫。","url":"/2021/12/21/65/","content":"iptables -I INPUT -p tcp --dport 80 -j DROPiptables -I INPUT -p tcp --dport 443 -j DROPcurl https://www.cloudflare.com/ips-v4awk &#x27;&#123;print &quot;iptables -I INPUT -s &quot;$0&quot; -p tcp --dport 80 -j ACCEPT&quot;&#125;&#x27;shcurl https://www.cloudflare.com/ips-v4awk &#x27;&#123;print &quot;iptables -I INPUT -s &quot;$0&quot; -p tcp --dport 443 -j ACCEPT&quot;&#125;&#x27;sh\n\nipV6\nip6tables -I INPUT -p tcp --dport 80 -j DROPip6tables -I INPUT -p tcp --dport 443 -j DROPcurl https://www.cloudflare.com/ips-v6awk &#x27;&#123;print &quot;ip6tables -I INPUT -s &quot;$0&quot; -p tcp --dport 80 -j ACCEPT&quot;&#125;&#x27;shcurl https://www.cloudflare.com/ips-v6awk &#x27;&#123;print &quot;ip6tables -I INPUT -s &quot;$0&quot; -p tcp --dport 443 -j ACCEPT&quot;&#125;&#x27;sh\n\nfirewall版本：\nfirewall-cmd --permanent --remove-port=80/tcpfirewall-cmd --permanent --remove-port=443/tcpfirewall-cmd --zone=public --remove-port=80/tcp --permanentfirewall-cmd --zone=public --remove-port=443/tcp --permanentcurl https://www.cloudflare.com/ips-v4awk &#x27;&#123;print &quot;firewall-cmd --permanent --add-rich-rule=\\&quot;rule family=\\&quot;ipv4\\&quot; source address=\\&quot;&quot;$0&quot;\\&quot; port protocol=\\&quot;tcp\\&quot; port=\\&quot;80\\&quot; accept\\&quot;&quot;&#125;&#x27;shcurl https://www.cloudflare.com/ips-v4awk &#x27;&#123;print &quot;firewall-cmd --permanent --add-rich-rule=\\&quot;rule family=\\&quot;ipv4\\&quot; source address=\\&quot;&quot;$0&quot;\\&quot; port protocol=\\&quot;tcp\\&quot; port=\\&quot;443\\&quot; accept\\&quot;&quot;&#125;&#x27;shsystemctl restart firewalld.service","categories":["默认分类"]},{"title":"宝塔相关安装与卸载","url":"/2022/01/02/66/","content":"宝塔国内版Centos安装命令：\nyum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\n\nUbuntu&#x2F;Deepin安装命令：\nwget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh\n\n卸载命令\nwget http://download.bt.cn/install/bt-uninstall.shsh bt-uninstall.sh\n\nbt工具箱 ，7.7.0版去强登后ssl申请好像有点问题，进去输入10降到7.6.0，输入3和1，去除强登\nwget -O btpanel_tools.sh https://download.btpanel.cm/tools/btpanel_tools.sh &amp;&amp; bash btpanel_tools.sh\n\naaPanel面板安装Centos&#x2F;Debian&#x2F;Fedora:\nwget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh\n\nUbuntu：\nwget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; sudo bash install.sh","categories":["默认分类"]},{"title":"dd CentOS","url":"/2022/01/09/67/","content":"以下命令中的 -c 后面为CentOS版本号，-v 后面为64位&#x2F;32位，可根据需求进行替换。\nCentOS 6.9 64位：`bash\n","categories":["默认分类"]},{"title":"WARP为服务器添加IPv4/IPv6网络","url":"/2022/01/10/68/","content":"wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh &amp;&amp; bash menu.sh\n\nWireGuard 网络接口数据，查看 wg\n临时关闭和开启 WARP（reboot重启后恢复开启） warp o 官方原始指令 wg-quick down wgcf ，恢复启动 wg-quick up wgcf\n禁止开机启动 systemctl disable –now wg-quick@wgcf,恢复开机启动 systemctl enable –now wg-quick@wgcf\n","categories":["默认分类"]},{"title":"常用脚本备份","url":"/2022/01/12/69/","content":"网络重装脚本PS：自定义密码直接 -p 你想要的密码就行！！！部分机器需要设置网卡，否则可以VNC，但是不能远程SSH\n-firmware                额外的驱动支持-d                        Debian系统 后面是系统版本号-c                        Centos系统 后面是系统版本号-v                         后面写64位 32位-a                        不清楚这个干啥的但是每个脚本都带--mirror                后面是镜像源地址-p                        后面写自定义密码–ip-addr                 ifconfig -a 后获取到的 例：194.87.xxx.xxx–ip-gate                 route -n    后获取到的 例   194.87.xxx.xxx–ip-mask                 255.255.xxx.xx\n\n· 甲骨文、三毛、Vir、RN等大部分VPS通用，三毛、甲骨文 记得去掉 -firmware\nbash  /etc/sysctl.confecho &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.confsysctl -psysctl net.ipv4.tcp_available_congestion_controllsmod  grep bbr\n\n复制代码\nsuperbench\nwget -qO- git.io/superbench.sh  bash\n\nBench.sh\nwget -qO- bench.sh  bash\n\n三网测速\nbash ","categories":["默认分类"]},{"title":"利用宝塔面板实现阿里云DDNS更新","url":"/2020/10/03/7/","content":"由于我的N1在Armbian上安装了宝塔面板，并架设了NextCloud(性能低下)所以还是装了Cloudreve，利用IPv6实现外网的便捷访问。Docker使用仅仅是为了DDNS还是很浪费资源的。所以就使用宝塔的计划任务来实现吧！\n其中的更新时间建议每天执行，当然也可以更频繁些，例如N小时一次。\naliddnsipv6_ak=&quot;**********&quot;aliddnsipv6_sk=&quot;************************&quot;aliddnsipv6_name1=&#x27;www&#x27;aliddnsipv6_domain=&#x27;xxx.com&#x27;aliddnsipv6_ttl=&quot;600&quot;if [ &quot;$aliddnsipv6_name1&quot; = &quot;@&quot; ]then  aliddnsipv6_name=$aliddnsipv6_domainelse  aliddnsipv6_name=$aliddnsipv6_name1.$aliddnsipv6_domainfinow=`date`die () &#123;    echo $1&#125;ipv6s=`ip addr show eth0  grep &quot;inet6.*global&quot;  awk &#x27;&#123;print $2&#125;&#x27;  awk -F&quot;/&quot; &#x27;&#123;print $1&#125;&#x27;`  die &quot;$ipv6&quot;for ipv6 in $ipv6sdo  #ipv6 = $ipv6  breakdoneecho $ipv6current_ipv6=`nslookup -query=AAAA $aliddnsipv6_name 2&gt;&amp;1`#echo $current_ipv6current_ipv6=`echo &quot;$current_ipv6&quot;  grep &#x27;Address: &#x27;  tail -n1  awk &#x27;&#123;print $NF&#125;&#x27;`echo $current_ipv6if [ &quot;$?&quot; -eq &quot;0&quot; ]then    current_ipv6=`echo &quot;$current_ipv6&quot;  grep &#x27;Address: &#x27;  tail -n1  awk &#x27;&#123;print $NF&#125;&#x27;`    echo $current_ipv6    if [ &quot;$ipv6&quot; = &quot;$current_ipv6&quot; ]    then        echo &quot;skipping&quot;    fi# fix when A record removed by manual dns is always update errorelse    unset aliddnsipv6_record_idfitimestamp=`date -u &quot;+%Y-%m-%dT%H%%3A%M%%3A%SZ&quot;`urlencode() &#123;    # urlencode     out=&quot;&quot;    while read -n1 c    do        case $c in            [a-zA-Z0-9._-]) out=&quot;$out$c&quot; ;;            *) out=&quot;$out`printf &#x27;%%%02X&#x27; &quot;&#x27;$c&quot;`&quot; ;;        esac    done    echo -n $out&#125;enc() &#123;    echo -n &quot;$1&quot;  urlencode&#125;send_request() &#123;    local args=&quot;AccessKeyId=$aliddnsipv6_ak&amp;Action=$1&amp;Format=json&amp;$2&amp;Version=2015-01-09&quot;    local hash=$(echo -n &quot;GET&amp;%2F&amp;$(enc &quot;$args&quot;)&quot;  openssl dgst -sha1 -hmac &quot;$aliddnsipv6_sk&amp;&quot; -binary  openssl base64)    curl -s &quot;http://alidns.aliyuncs.com/?$args&amp;Signature=$(enc &quot;$hash&quot;)&quot;&#125;get_recordid() &#123;    grep -Eo &#x27;&quot;RecordId&quot;:&quot;[0-9]+&quot;&#x27;  cut -d&#x27;:&#x27; -f2  tr -d &#x27;&quot;&#x27;&#125;query_recordid() &#123;    send_request &quot;DescribeSubDomainRecords&quot; &quot;SignatureMethod=HMAC-SHA1&amp;SignatureNonce=$timestamp&amp;SignatureVersion=1.0&amp;SubDomain=$aliddnsipv6_name&amp;Timestamp=$timestamp&amp;Type=AAAA&quot;&#125;update_record() &#123;    send_request &quot;UpdateDomainRecord&quot; &quot;RR=$aliddnsipv6_name1&amp;RecordId=$1&amp;SignatureMethod=HMAC-SHA1&amp;SignatureNonce=$timestamp&amp;SignatureVersion=1.0&amp;TTL=$aliddnsipv6_ttl&amp;Timestamp=$timestamp&amp;Type=AAAA&amp;Value=$(enc $ipv6)&quot;&#125;add_record() &#123;    send_request &quot;AddDomainRecord&amp;DomainName=$aliddnsipv6_domain&quot; &quot;RR=$aliddnsipv6_name1&amp;SignatureMethod=HMAC-SHA1&amp;SignatureNonce=$timestamp&amp;SignatureVersion=1.0&amp;TTL=$aliddnsipv6_ttl&amp;Timestamp=$timestamp&amp;Type=AAAA&amp;Value=$(enc $ipv6)&quot;&#125;#add support */%2A and @/%40 recordif [ &quot;$aliddnsipv6_record_id&quot; = &quot;&quot; ]then    aliddnsipv6_record_id=`query_recordid  get_recordid`    #echo &#x27;-----------------&#x27; $aliddnsipv6_record_idfiif [ &quot;$aliddnsipv6_record_id&quot; = &quot;&quot; ]then    aliddnsipv6_record_id=`add_record  get_recordid`    echo &quot;added record $aliddnsipv6_record_id&quot;else    update_record $aliddnsipv6_record_id    echo &quot;updated record $aliddnsipv6_record_id&quot;fi\n\n参数说明：\nAccessKey ID：aliddnsipv6_ak=&quot;**********&quot;Access Key Secretaliddnsipv6_sk=&quot;************************&quot;\n\n子域名：\naliddnsipv6_name1=&#x27;www&#x27;\n\n域名：\naliddnsipv6_domain=&#x27;xxx.com&#x27;\n\nTTL:\naliddnsipv6_ttl=&quot;600&quot;\n\nshow:etho 是指定网卡获取IPv6，可通过ifconfig命令来获取网卡名ipv6s&#x3D;ip addr show eth0 grep &quot;inet6.*global&quot; awk &#39;&#123;print $2&#125;&#39; awk -F&quot;/&quot; &#39;&#123;print $1&#125;&#39; die “$ipv6”配置好了之后保存，可以尝试执行一次看是否已经生效，如果正常就OK啦！是不是很简单？\n","categories":["默认分类"],"tags":["DDNS"]},{"title":"宝塔降级7.7","url":"/2022/01/12/70/","content":"破解的有BUG 推荐使用降级\nwget http://download.bt.cn/install/update/LinuxPanel-7.7.0.zipunzip LinuxPanel-*cd panelbash update.shcd .. &amp;&amp; rm -f LinuxPanel-*.zip &amp;&amp; rm -rf panel\n\n破解登录\nrm -f /www/server/panel/data/bind.plsed -i -r &quot;s/not not get_user_info\\(\\)/True/&quot; /www/server/panel/class/public.py &amp;&amp; bt 1","categories":["默认分类"]},{"title":"NginxProxyManager","url":"/2022/01/12/71/","content":"mkdir nginxcd nginxversion: &#x27;3&#x27;services:  app:    image: &#x27;jc21/nginx-proxy-manager:latest&#x27;    restart: unless-stopped    ports:      - &#x27;80:80&#x27;      - &#x27;81:81&#x27;      - &#x27;443:443&#x27;    volumes:      - ./data:/data      - ./letsencrypt:/etc/letsencrypt\n\ndocker-compose up -d\n默认帐号密码\n\nEmail:    &#97;&#x64;&#109;&#105;&#x6e;&#x40;&#x65;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;&#x63;&#111;&#x6d;\nPassword: changeme\n\n","categories":["默认分类"]},{"title":"docker 制作自己的镜像","url":"/2022/01/17/72/","content":"检查镜像docker image\n\n检查容器docker ps -a\n\n交互式运行debian镜像docker run -itd --name blog debiandocker exec -it blog /bin/bash apt updateapt install -y upgradeapt install -y vim curl wget bash htopcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\n将容器变成镜像docker commit -m=&quot;debian环境&quot; -a=&quot;mydaoke&quot; blog mydaoke/debian:1.0-m：注释信息-a：作者名称blog：待提交的容器名称mydaoke/debian:1.0：提交后的镜像名:TAG\n\n登录Docker Hubdocker login\n\n推送镜像docker push mydaoke/debian:1.0","categories":["默认分类"]},{"title":"Linux 文件/文件夹的创建、复制、移动、删除","url":"/2022/01/18/73/","content":"Linux 命令行终端中，文件&#x2F;文件夹的创建、复制、移动、删除。\n文件夹创建命令\nmkdir 1 #创建文件夹1到当前目录\nmkdir -p 1&#x2F;2 #创建文件夹1，并在文件夹1中创建文件夹2\n\n文件创建命令\ntouch 1.txt #创建文件1.txt到当前目录\n\nrm 选项 文件或目录选项说明\n\n-f 强制删除-i 交互模式，在删除前询问用户是否操作-r 递归删除，常用在目录的删除\n\n示例\nrm -f 1.txt  #强制删除文件1.txtrm -rf 1/*  #递归强制删除文件夹1里面的所有文件和文件夹rm -rf 1 #递归强制删除文件夹1","categories":["默认分类"]},{"title":"caddy安装","url":"/2022/01/19/74/","content":"sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\n\ncurl -1sLf &#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;  sudo apt-key add - curl -1sLf &#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;  sudo tee -a /etc/apt/sources.list.d/caddy-stable.list    sudo apt update    sudo apt install caddy\n\n证书位置cd /var/lib/caddy/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/\n\n配置文件路径/etc/caddy/Caddyfile\n\n修改配置后 重新加载配置\n反向代理www.psvmc.cn &#123;    reverse_proxy localhost:9000&#125;\n\n修改配置后 重新加载配置systemctl reload caddy\n\nUbuntusudo systemctl restart caddy\n","categories":["默认分类"]},{"title":"使用 Dockerfile 定制镜像","url":"/2022/01/21/76/","content":"示例 frps创建一个文件夹 frp\nmkdir frp &amp;&amp; cd frp\n\n编辑Dockerfile文件\nnano Dockerfile\n\n下面代码复制粘贴\nFROM alpineMAINTAINER Stille ENV FRP_VERSION 0.38.0WORKDIR /RUN set -xe &amp;&amp; \\    apk add tzdata &amp;&amp; \\    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\    echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone &amp;&amp; \\    apk del tzdataRUN set -x &amp;&amp; \\    if [ &quot;$(uname -m)&quot; = &quot;x86_64&quot; ]; then export PLATFORM=amd64 ; else if [ &quot;$(uname -m)&quot; = &quot;aarch64&quot; ]; then export PLATFORM=arm64 ; fi fi &amp;&amp; \\    wget --no-check-certificate https://github.com/fatedier/frp/releases/download/v$&#123;FRP_VERSION&#125;/frp_$&#123;FRP_VERSION&#125;_linux_$&#123;PLATFORM&#125;.tar.gz &amp;&amp; \\     tar xzf frp_$&#123;FRP_VERSION&#125;_linux_$&#123;PLATFORM&#125;.tar.gz &amp;&amp; \\    cd frp_$&#123;FRP_VERSION&#125;_linux_$&#123;PLATFORM&#125; &amp;&amp; \\    mkdir /frp &amp;&amp; \\    mv frps frps.ini /frp &amp;&amp; \\    cd .. &amp;&amp; \\    rm -rf *.tar.gz frp_$&#123;FRP_VERSION&#125;_linux_$&#123;PLATFORM&#125;VOLUME /frpCMD /frp/frps -c /frp/frps.ini\n\n生成docker镜像\ndocker build -t mydaoke/frps:0.38 .\n\nmydaoke&#x2F;frps:0.38修改自己的名称查看生成docker镜像\ndocker images\n\n试运行一下\ndocker run --restart=always --network host -d -v /root/frp/frps.ini:/frp/frps.ini --name frps mydaoke/frps:0.38\n\nOk\n","categories":["默认分类"]},{"title":"玩客云当录像机安装pyNvr","url":"/2022/02/13/77/","content":"pyNvr脚本\n安装python3\n如果使用百度网盘：\npip3 install bypybypy info\n\n复制链接粘贴到浏览器打开，登录，填写授权码。如果出错试试删掉配置文件重新授权\nrm -Rf ~/.bypyrm -f ~/.bypy.*\n\n如果使用阿里云盘：\npip3 install aligo\n\n安装opencv：\napt install python3-opencv\n\n创建保存视频的文件夹,例如：\nmkdir /home/videosmkdir /home/videos/cam01\n\n一定要创建好路径，并且跟配置的路径一致，最后一层文件夹的名称为摄像头名称（camname）,参数pwd写到倒数第二层文件夹，以&#x2F;&#x2F;结尾即可。 编辑pyNvr.py,修改配置（选择netdisk（netdisk &#x3D; 1为百度，2为阿里），摄像头名称camname、串流地址url、本地存储路径pwd，单个视频时长blocktime,开启储存到百度网盘upyoby，上传完成后删除本地文件re_af_up）\n运行：\ncd pyNvr\n\n运行：\npython3 pyNvr.py\n\n如果使用阿里网盘，第一次使用需要登录（百度已经登陆过）如果二维码显示错乱，需要新建一个终端，手动找到&#x2F;tmp中的图片复制到手机可以直接访问的文件夹中，扫描，如：cp &#x2F;tmp&#x2F;tmp56sdcc.png &#x2F;sdcard&#x2F;DCIM&#x2F;QRcode.png打开文件管理，找到DCIM文件夹下的这张图，扫描即可。测试没有问题后，ctrl + C终止程序。后台运行程序:\nnohup python3 pyNvr.py &amp;\n\n增加重启开机自动运行\nnano /etc/rc.local\n\n把nohup python3 /root/pyNvr/pyNvr.py &amp;增加exit 0前面程序极其简陋，稳定和安全毫无保障，仅仅用于不含任何隐私信息、图省钱省事还想多一层云备份的情况仅建议用于linux不完整的安卓手机，云服务器、实体机、树莓派建议使用知名开源或商业软件，如bluebeery等。附，国内常见IP摄像头串流地址:\n海康威视主码流：rtsp://user:password@ip:554/h264/ch1/main/av_stream子码流：rtsp://user:password@ip:554/mpeg4/ch1/sub/av_stream大华rtsp://username:password@ip:port/cam/realmonitor?channel=1&amp;subtype=0TP-Link/水星安防rtsp://user:password@ip:554/stream1rtsp://user:password@ip:554/stream2三星高码流rtsp地址：rtsp://user:password@ip:554/onvif/profile2/media.smp（720P）低码率rtsp地址rtsp://user:password@ip:554/onvif/profile3/media.smpLG高码流（主码流）RTSP地址：rtsp://user:password@ip:554/Master-0低码流（子码流）RTSP地址：rtsp://user:password@ip:554/Slave-0","categories":["网络资源"]},{"title":"自制N1 Docker Openwrt镜像及运行镜像","url":"/2022/02/16/78/","content":"1.编译openwrt\nTarget System 选择 QEMU ARM VIrtual MachineSubtarget 选择 ARMv8 multiplatform其它的随意\n\n\n编译好的openwrt，会生成 rootfs 打包文件：  openwrt-armvirt-64-default-rootfs.tar.gz\n在装好armbian和docker的N1上，把openwrt-armvirt-64-default-rootfs.tar.gz和Dockerfile放到同一个目录下\n制造镜像(示例用的是openwrt by lean r9.7.6源码，因此镜像名称为：openwrt-arm64 版本为 r9.7.6docker build -t openwrt-arm64:r9.7.6 .即可生成镜像用docker images，可以查看到已生成的镜像用docker save openwrt-arm64:r9.7.6 gzip &gt; docker-image-openwrt-arm64-r9.7.6.tar.gz 可以把镜像导出成打包文件用 gzip -dc docker-image-openwrt-arm64-r9.7.6.tar.gz docker load ，可以把打包文件还原成docker镜像\n运行镜像：可以参见 https://www.jianshu.com/p/e62190cfff1a?tdsourcetag=s_pcqq_aiomsg重点：a. 物理网卡要开启混杂模式（promisc)，有临时生效型（命令）和永久生效型（要改网络配置文件）b. docker创建macvlan网络c. 用macvlan网络绑定docker容器d. 物理机和openwrt容器在同一网段，但不同ipe. macvlan模式下，物理机和openwrt容器之间是ping不通的，这是正常现象，但第三方电脑都能ping通两者\n\n示例：\n#docker创建macvlan网络，名为macnet\ndocker network create -d macvlan –subnet&#x3D;192.168.3.0&#x2F;24 –gateway&#x3D;192.168.3.1 -o parent&#x3D;eth0 macnet\n#用macnet运行openwrt实例，实例名为phicomm-n1\n#引用armbian的通用函数包\nsource &#x2F;usr&#x2F;lib&#x2F;armbian&#x2F;armbian-common\n#得到一个随机MAC地址,存入MACADDR变量\nget_random_mac\ndocker run –name phicomm-n1 –restart always –network macnet –mac-address $MACADDR -d –privileged&#x3D;true –ulimit nofile&#x3D;16384:65536 openwrt-arm64:r9.8.17\n#进入op容器，修改&#x2F;etc&#x2F;config&#x2F;network\ndocker exec -it phicomm-n1 shvi &#x2F;etc&#x2F;config&#x2F;network\n修改下面这段：config interface ‘lan’\noption ifname &#x27;eth0&#x27;option proto &#x27;static&#x27;option netmask &#x27;255.255.255.0&#x27;option gateway &#x27;192.168.3.1&#x27;option ipaddr &#x27;192.168.3.20&#x27;option broadcast &#x27;192.168.3.255&#x27;option ip6assign &#x27;64&#x27;option dns &#x27;192.168.3.1&#x27;\n\n注：192.168.3.1是主路由的地址\n192.168.3.20是openwrt自己的地址，也就是旁路由的地址 broadcast和dns也做相应更改\n\n改好后，存盘，运行：&#x2F;etc&#x2F;init.d&#x2F;network restart过一会就可以ping通旁路由了，然后用浏览器连上192.168.3.20就可以按一般的操作了\n","categories":["默认分类","网络资源"]},{"title":"github国内设置","url":"/2022/05/12/82/","content":"git config --global url.https://xx.xx.xx/.insteadof https://   增加git config --global --unset url.https://xx.xx.xx/.insteadof https://   取消git config --global --list  检查\n\nxx.xx.xx 是代理域名\n","categories":["网络资源"],"tags":["Github"]},{"title":"使用Caddy2作为文件服务器","url":"/2022/05/15/85/","content":"Caddyfile\nhttp://yourdomain.com &#123;basicauth &#123;    bob xDJhJDEwJEVoOWxYTmY5eVdCbXhhRC95SGZoYxU0bVQvaXhyamdLRkxKdUlPSHhLVFY0RWNlRDN5eDx2&#125;file_server &#123;    root /home/share    browse&#125;\n\n}\n其中密码应该使用 caddy hash-password 生成","categories":["网络资源"],"tags":["Caddy"]},{"title":"docker mysql容器创建用户密码","url":"/2022/05/18/86/","content":"#进入 mysql5.7 容器\nsudo docker exec -it mysql5.7 bash\nmysql -uroot -p123456\n#创建用户，密码随意\nmysql&gt; create user &#39;239239&#39;@&#39;%&#39; identified by &#39;123456&#39;;mysql&gt; grant all privileges on *.* to &#39;239239&#39;@&#39;%&#39; with grant option;mysql&gt; flush privileges;\n#创建数据库\nmysql&gt; create database 239239;\n","categories":["默认分类","网络资源"],"tags":["docker","mysql"]},{"title":"花生壳5.0 for 树莓派","url":"/2020/10/09/9/","content":"一、下载在花生壳下载页面，找到树莓派5.0并下载。将安装包下载到本地电脑后，可以通过WinSCP等工具将安装包传输到树莓派中。\n二、安装注意：安装花生壳前，需输入命令：sudo -s 切换到管理员权限。1、使用cd命令进入安装包所在的文件路径，输入安装命令：dpkg -i 安装包名称。回车，等待安装完成。如： dpkg -i phtunnel_5_0_rapi_aarch64.deb\n安装成功后，将显示花生壳的SN码、默认密码（admin）及远程管理地址http://b.oray.com。三、操作功能1、输入命令：phddns回车，可以看到扩展功能。phddns start（启动） status（状态） stop（停止）restart（重启） reset（重置）enable（开机自启动）disable（关闭开机自启动）version（版本）日志文件存放路径：&#x2F;var&#x2F;log&#x2F;phddns\n","categories":["默认分类"],"tags":["DDNS","动态域名解析"]},{"title":"Hexo的配置","url":"/2022/11/22/Hexo/","content":"\ndocker exec -it hexo /bin/bash \n\ngit config --global user.email \"xxxx@gmail.com\"\ngit config --global user.name \"xxxx\"\n\n生成 和 发布\nhexo clean && hexo d github\n\n生成 hexo g && hexo generate\n\n发布hexo d   && hexo deploy","categories":["hexo"],"tags":["hexo"]},{"title":"Rclone挂载Google Drive网盘","url":"/2022/11/22/RcloneGoogle-Drive/","content":"挂载GD  到这里结束配置 rclone，下面要把 Google Drive 网盘挂载到云主机&#x2F;Vps 上和设置开机自启，自动挂载 Google Drive 网盘  首先安装fuse:\napt-get install fuse  #debian\nyum install fuse   #centos\n新建一个你要挂载的目录，例如我要挂载到\n/home/gdrive\nmkdir -p /home/gdrive\n再执行挂载命令：\nrclone mount gd: /home/gdrive --allow-other --allow-non-empty --vfs-cache-mode writes\ngd 为Rclone的配置名称，比如你在创建配置 rclone 的时候 Name 填的 gd，&#x2F;home&#x2F;gdrive 为本地路径（注意空格别漏了）； 这里还可以自定义设置网盘里的文件夹路径，例如：\nrclone mount gd:backup /home/gdrive --allow-other --allow-non-empty --vfs-cache-mode writes\n卸载 Google Drive 磁盘\nfusermount -qzu /home/gdrive\n挂载只要几秒钟，但终端不会返回成功信息，关闭 SSH 重连即可。  重连后查看是否挂载成功： df-h\n","categories":["vps"],"tags":["rclone"]},{"title":"VPS主机一键更换国内软件源脚本","url":"/2022/11/22/VPShost/","content":"https://gitee.com/SuperManito/LinuxMirrors https://github.com/SuperManito/LinuxMirrors\nbash &lt;(curl \\-sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh) \n如果提示 Command curlnot found 则说明当前未安装 curl 软件包\nsudo yum install -y curl  sudo apt-get install -y curl\n如果提示 Command wgetnot found 则说明当前未安装 wget 软件包\nsudo yum install -y wget  sudo apt-get install -y wget\n如果提示 bash: &#x2F;proc&#x2F;self&#x2F;fd&#x2F;11: No such file or directory，请切换至 Root 用户执行\n","tags":["vps"]},{"title":" ArmBian做ZeroTier内网穿透","url":"/2020/10/08/clypbp/","content":"Linux 最简单的安装方法：\ncurl -s https://install.zerotier.com/ | sudo bash\n\n无任何报错显示：\n*** Waiting for identity generation...\n\n*** Success! You are ZeroTier address [ d56f99571f ].把 zerotier 服务复制到系统服务目录并激活\nsystemctl daemon-reloadsystemctl start zerotier-onesystemctl enable zerotier-one //开机启动\n\n察看状态：\nzerotier-cli info\n\n演示：\n[root@instance-1  ~]# zerotier-cli info200 info d56f99571f 1.2.12 ONLINE最后加入 zerotier 网络：\nzerotier-cli join &lt;network&gt; //你的Zeroiter网络ID\n\n彻底卸载 Zerotier-one通过 dpkg 删除 zerotier-one 服务\nsudo dpkg -P zerotier-one\n\n删除 zerotier-one 文件夹，该文件夹存储了 address 地址，删除后再次安装会获得新的 address 地址\nsudo rm -rf /var/lib/zerotier-one/\n\n服务**\nsudo dpkg -P zerotier-one\n\n删除 zerotier-one 文件夹，该文件夹存储了 address 地址，删除后再次安装会获得新的 address 地址\nsudo rm -rf /var/lib/zerotier-one/\n","categories":["ArmBian","DDNS"],"tags":["ArmBian","ddns","ZeroTier"]},{"title":"VPS采用Ed25519密钥登录","url":"/2022/05/26/ld7o8d/","content":"本文抄自：https://github.com/nkypy/blog/issues/17\n正文前先对比一下：\n3072的RSA的安全性&#x3D;256的ECC(包括ECDSA和25519(EdDSA))\n25519相对于传统NIST P-256曲线的ECDSA效率与速度更快且为确定性签名。\n\n一、本地配置\n1.1 在Windows PowerShell中运行命令\nssh-keygen -t ed25519 -C \"oracledubai\" # 随便起个名称,本例以oracleduba\nEnter passphrase (empty for no passphrase):\n#对密钥加个私人密码，输入密码或回车留空。\nEnter same passphrase again:# 确认密码或回车。\n#显示\nGenerating public/private ed25519 key pair.Enter file in which to save the key (/home/lenovo/.ssh/id_ed25519): #文件保存位置,一般默认即可。\n#显示\nEnter passphrase (empty for no passphrase): #对密钥加个私人密码，输入密码或回车留空。Enter same passphrase again:# 确认密码或回车。\n#显示\nYour identification has been saved in /home/lenovo/.ssh/id_ed25519 #生成的私钥\nYour public key has been saved in /home/lenovo/.ssh/id_ed25519.pub #生成的公钥\nThe key fingerprint is:\nSHA256:PdwszW0JXELbXMuQXDGN+xfKfCMd6YQWEB4 oracledubai #指纹\nThe key's randomart image is:\n+--[ED25519 256]--+\n|  Eo.+ . .o ..ooo|\n| . .= = .  + . +=|\n| ..= = o  o o . o|\n|o = o o  o B = . |\n|o+ +    S = B +  |\n|oo+        o .   |\n|=  o             |\n|..o              |\n|..               |\n+----[SHA256]-----+\n\n\nid_ed25519是私钥，id_ed25519.pub是公钥。\n\n保存在C:\\Users\\lenovo.ssh路径中。lenovo为计算机名，不知道是啥的看上面路径home后面的名称。\n\n\n二、VPS端操作\n2.1 以root登录vps\nmkdir /root/.ssh/\n2.2 上传公钥\n将id_ed25519.pub上传到&#x2F;root&#x2F;.ssh&#x2F;路径下，并运行\ncat /root/.ssh/id_ed25519.pub &gt;&gt;  /root/.ssh/authorized_keys\n2.3 修改密钥项\nvim /etc/ssh/sshd_config\n将下列两行的井号去掉\n#PubkeyAuthentication yes    #允许密钥认证\n#AuthorizedKeysFile    .ssh/authorized_keys .ssh/authorized_keys2    #默认公钥位置\nservice sshd restart #重启sshd\n2.4 以密钥方式重新登录\n注意：以密钥方式重新登录\n2.5 关闭密码登录\n运行的前提是：能够密钥登录VPS\nvim /etc/ssh/sshd_config\n将后面的PasswordAuthentication yes\n修改为：PasswordAuthentication no\nservice sshd restart #重启sshd\n三、常见的几种密钥生成方式对比\nDSA: 它是不安全的，甚至从OpenSSH第7版开始就不再支持，你需要升级它!\nRSA: 这取决于密钥大小。如果它有3072或4096位的长度，那么你就很好。低于这个长度，你可能要升级它。1024位的长度甚至被认为是不安全的。\nECDSA：这取决于你的机器能产生一个随机数的程度，这个随机数将被用来创建签名。在ECDSA使用的NIST曲线上也有一个可信度问题。\n#Ed25519: 这是目前最值得推荐的公钥算法!\n转:https://winamp.top/230.html\n","tags":["vps"]},{"title":"mjj版的linux入门教程","url":"/2022/11/02/mjj/","content":"本文的首要目的是给予Linux初学者一个简单、易学的教程，以便在看完本文后对Linux系统有一个基础的认识（而非系统级的深入），可以对常见的软件和功能进行配置，甚至可以自己写一写一键脚本。\n本教程写于2021年下半年，采用的系统为Debian GNU&#x2F;Linux 11 (bullseye)。\n\n\n0 前言吐槽CentOS解释使用Debian而不是CentOS的原因\n国内首批接触Linux系统的人主要集中在科研院校，大多数是延续了Unix-like的背景，在千禧年前后才有了真正意义上的Linux使用者：纯Linux平台开发、运行服务和应用，他们或直接或间接地推广了Linux系统。红帽（Red Hat, Inc.）在1994年就开始发布了同名的操作系统：Red Hat Linux（后改组为Red Hat Enterprise Linux，缩写为RHEL）。得益于红帽优秀的团队和商业支持，RHEL这一发行版迅速占领了国内市场。彼时的国内计算机市场远不如今日繁荣，在口口相传和红帽的推广中，RHEL成为了Linux入门的主流选项，即使后来号称用户友好的Ubuntu出现了，绝大多数尝鲜的人依然能看到众多网站里面只提供RHEL版本的教程。\nCentOS是根据RHEL的源码重新编译的，等于换商标版本的RHEL，软件层面上，两者无本质区别。但CentOS是反人类的，至少是反入门用户的。使用RHEL的基本为商业用户，可以付费获得红帽的技术支持，或者干脆有一个自己的维护团队；而CentOS作为一个社区自发形成的操作系统，拥有落后的软件源&#x2F;包，繁琐的配置，和对个人用户而言根本没有必要的SElinux等。举个例子，很多入门者修改SSH端口的时候，发现所有的操作都没有问题，但是死活无法生效，最终发现是没有在SElinux里面放行。如果你想安装个软件，你就得考虑是从落后主流版本好几代的软件源&#x2F;包里面安装，还是自己下载源码进行编译以获取主流的使用体验。对于入门者而言，CentOS的安全性和稳定性是个虚假的概念，毕竟让一个刚接触Linux的人去自己编译源码安装，无异于让小学生上战场，输了就说是小学生战斗力太弱。\n所以本文以Debian GNU&#x2F;Linux（后续简称为Debian）来演示，也有着推广Debian的意思在里面，毕竟相比于Ubuntu往系统里面塞包括snap在内的一系列私货而言，Debain始终遵循着一个纯净的Linux的要求。而其他一些发行版，要么是专用性太强（如SUSE），要么是入门者不友好（如 Arch Linux），权衡之后，选择了写本文时，最新的Debian系统，即Debian GNU&#x2F;Linux 11 (bullseye)。\n1 环境搭建1.1 系统选择与安装Debian的安装包有一系列的前缀或者后缀，例如在默认的下载地址https://www.debian.org/download中的是debian-11.0.0-amd64-netinst.iso。其中，\n\n11代表大版本是11，代号是bullseye，各版本代号都来源于电影《玩具总动员》中的角色名称；\namd64是指系统为64位的，i386或者x86是32位的，amd64或者x86-64是64位的，32位系统已经被逐步弃用，目前仅在特定行业中使用；\nnetinst是网络安装版本，只是个安装器，安装过程需要联网，而DVD后缀的是完整版（如：debian-11.0.0-amd64-DVD-1.iso），如果系统太大，会在DVD后面加数字，默认DVD-1是完整版本，其后数字的是软件源&#x2F;包；\n带firmware前缀的是包含第三方非开源驱动的（如：firmware-11.1.0-amd64-DVD-1.iso），其中就包含intel和Realtek等公司的闭源网卡驱动。\n\nVPS全称为virtual private server（虚拟专用服务器），如果需要安装纯净版的Debian 11系统，推荐使用vicer的Linux一键重装脚本（如下）：\nbash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -d 11 -v 64 -p &quot;自定义root密码&quot; -port &quot;自定义ssh端口&quot;\n\n\n\n1.2 常用的命令cat 用于查看文本文件的内容，如cat /etc/os-release 将显示系统信息，如下：\nPRETTY_NAME=&quot;Debian GNU/Linux 11 (bullseye)&quot;NAME=&quot;Debian GNU/Linux&quot;VERSION_ID=&quot;11&quot;VERSION=&quot;11 (bullseye)&quot;VERSION_CODENAME=bullseyeID=debianHOME_URL=&quot;https://www.debian.org/&quot;SUPPORT_URL=&quot;https://www.debian.org/support&quot;BUG_REPORT_URL=&quot;https://bugs.debian.org/&quot;\n\ntouch 新建文本文件，如touch /home/hello.py 将在home 文件夹下新建一个Python文件。\nls 列出所有文件，但默认只是显示出最基础的文件和文件夹，如果需要更详细的信息，则使用ls -la，这将列出包括隐藏文件在内的所有文件和文件夹，并且给出对应的权限、大小和日期等信息。\ncd 进入指定文件夹，如cd /home 将进入home目录。返回上层目录的命令是cd ..，返回刚才操作的目录的命令是cd -。\nmkdir 新建文件夹，如mkdir /home/Python 将在home 文件夹下新建一个Python 文件夹。\nmv 移动文件和文件夹，也可以用来修改名称，如mv /home/hello.py /home/helloworld.py 将上文的hello.py重命名为helloworld.py，mv /home/helloworld.py /home/Python/helloworld.py 将helloworld.py 由home文件夹移动到了次级的Python文件夹。\ncp 复制文件，cp /home/Python/hellowrold.py /home/Python/HelloWorld.py 将helloworld.py复制为HelloWolrd.py。注意：Linux系统严格区分大小写，helloworld.py和HelloWolrd.py是两个文件。如果想复制整个文件夹，则需要带r，即cp -r，但此命令无法复制隐藏文件夹，需要使用cp -r pathA/. pathB 注意这个点.是灵魂。\nrm 删除，即江湖传说中rm -rf ，r为递归，可以删除文件夹中的文件，f为强制删除。rm /home/Python/helloworld.py 可以删除刚才的helloworld.py 文件，而想删除包括Python 在内的所有文件，则是rm -rf /home/Python 。\ndu -lh 查看当前文件夹下，各文件、文件夹的大小，l是硬链接（软连接类似于快捷方式），h是让文件自动使用K&#x2F;M&#x2F;G显示而不是只有K。\n1.3 基础文本编辑器nano、vimLinux系统的一大优势（同时也是劣势）是默认不需要GUI，因此节省了大量的性能开支，无GUI版本的Debian 11可以在512M甚至更小内存的VPS上正常启动和运行。但缺少GUI加大了入门者修改文件的难度，所幸Debian 11自带了简便易用的nano文本编辑器。以下以修改系统的更新源为例\nnano /etc/apt/sources.list #打开sources.list文件，在Linux系统中，#是注释符，其后的内容会被忽略\n\n\n如图所示，即为nano打开sources.list后的界面，最下面两行为提示，比如Ctrl+E为退出，如果文档被改动了，则会出现下图，询问是否保存。如果没有被更改，则会直接退出。\n\nY则保存，N则不保存，Ctrl+C取消操作。此处输入Y，则会如下图：\n\n此时按下Enter键就会保存了。\n这里多提一句关于Debian 11的更新源内容，一般是以下6行。\ndeb http://deb.debian.org/debian bullseye main contrib non-freedeb-src http://deb.debian.org/debian bullseye main contrib non-freedeb http://deb.debian.org/debian-security/ bullseye-security main contrib non-freedeb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-freedeb http://deb.debian.org/debian bullseye-updates main contrib non-freedeb-src http://deb.debian.org/debian bullseye-updates main contrib non-free\n\ndeb表示为已经编译好的安装包，类似于Windows上的MSI安装包，deb-src是源文件，万一没有打包好，提供自己本地编译安装的机会。总共分三大行，第一行是系统主文件，第二行是安全性更新，第三个是一些更新补充，推荐三个都写上。在每行的末尾都有main contrib non-free字样，其中main是官方给的包&#x2F;源，严格遵守相关开源协议；contrib是包&#x2F;源本身遵守相关开源协议，但是它们的依赖则不是；non-free是私有的软件，比如上文提到的Realtek的WiFi驱动等。除此之外，其实还有个Backports作为第四大行，是将比较陈旧的软件移植过来的，很少会用到，一般默认不写上。\nnano虽然好，但是功能简单，只适合一些简单的文本文件编辑功能，而发展自vi的vim则被成为编辑器之神（Emacs被称为神之编辑器，Linux之父Linus Torvalds就在用）。系统会自带vi但是不带vim，正好我们可以使用上述修改过的更新源来安装vim作为示例。\napt update # 更新一下源apt install vim -y #安装vim这个软件 -y是确认安装\n\n使用vim /etc/apt/sources.list打开更新源文件，如下图所示：\n\nvim功能众多，使用复杂，得慢慢说。左下角是此文件的路径和名称，右下角是光标此时的行数和列数。此时是无法直接输入，要先按下insert或者i键变成插入模式才行。此时，左下角如下图，变成了INSERT&#x2F;插入模式。\n\n然后就是该怎么写就怎么写，一些快捷键去百度谷歌必应吧，说的肯定比我详细。但是必须提到如何保存文件：insert模式下按esc键（一般是键盘最左上角，99%的人可能都不怎么用的一个键），INSERT会消失不见，如下图：\n\n这个时候再按下:键，界面上也会出现一个冒号，如下图。注意，这个冒号是半角的，全角冒号是没用的。\n\n这个时候，按下wq这两个键，即可保存内容。w是write&#x2F;写入的意思，q是quit&#x2F;退出的意思。如果你不想保存，则只输入q键即可，但是有时候因为文件已经被修改了，vim不让退出，这时候输入q!就可以了，感叹号是强制执行的意思，执行后文件不会被修改并且会退出vim。\n1.4 更新系统至此，不管是使用nano还是vim都可以对更新源进行编辑了，让我们来具体了解一下如果更新系统和相关指令。\napt updateapt list --upgradableapt upgrade -y\n\n以上三行，分别是和更新源同步，显示出哪些软件可以更新，以及进行更新。\n如上文中，安装了vim，若想卸载vim，则有以下两个命令，任意一个即可，但之间存在差别。\napt remove vim -yapt purge vim -y\n\n第一个会址卸载vim软件本身，配置文件仍然会本留下；第二种连带着配置文件和相关依赖一起卸载了，所以存在一定风险。除此之外，apt autoremove是对整个系统进行整理，将不需要的依赖卸载了，不针对于特定软件。\n2 SSH连接和基础配置一般VPS供应商都会提供SSH的链接方式，包括用户名，密码和端口号，一些注重安全性的会修改端口号甚至只有采用密钥才能登陆VPS。这里使用纯净版的系统和默认配置进行演示。\n2.1 连接SSH的软件和相关操作SSH软件有开源的和不开源的，有付费的和免费的，整理了一个常见SSH客户端（Windows平台）的对比表格和相关信息。其实在2021年，macos、Linux和windows 10都自带SSH功能，这里先不讨论。个人目前主用mobaxterm，偶尔使用xshell。\n\n\n\n名称\n免费与否\n下载地址\n\n\n\nXshell\n家庭&#x2F;学校免费\nhttps://www.netsarang.com/zh/free-for-home-school/\n\n\nMobaXterm\n家庭版免费\nhttps://mobaxterm.mobatek.net/download.html\n\n\nFinalShell\n基础功能免费\nhttps://www.hostbuf.com/t/988.html\n\n\nelecterm\n免费+开源\nhttps://github.com/electerm/electerm/releases\n\n\nPuTTY\n免费+开源\nhttps://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\n\n\nXshell：传播广泛，自带中文，个人使用完全免费，但是会话窗口限制最多只能打开四个SSH连接，再多之后就会自动新建会话窗口了，传输文件需要配合Xftp才行。目前国区被臭名昭著的思杰马克丁代理了，如需使用，请前往官网下载，在输入邮件和姓名后，会收到一封邮件，邮件里面给出下载连接。\nMobaXterm：只有英文版本，偶尔会反应慢半拍，除此之外没缺点。功能极其强大，传输文件、性能监控、串口通信、X11支持、IP检测、宏、WSL、远程桌面等，能想到的功能都有，而且个人使用免费。\nFinalShell：国人开发，所以本地化很好，全中文，日常需要的功能也都有。有一些进阶功能需要付费，也可以云端保存SSH账号，虽然也是付费功能。缺点的话，和MobaXterm一样，JAVA写的东西，总是让人觉得慢半拍。\nelecterm：日常所需功能都有，完全开源和免费，还可以通过GitHub实现免费的云端保存SSH账号功能，适合自己折腾和魔改。基于electron开发的，从而实现了跨平台，Windows、Mac和Linux都有客户端。不过缺点也显而易见，electron本质上是个浏览器，占内存和硬盘空间。\nPuTTY：由Simon Tatham开发和维护的，老牌中的老牌，但是缺少人性化设置，不推荐。\n2.2 SSH配置文件介绍和修改SSH的配置文件在/etc/ssh/sshd_config中，是一个纯文本文件，可以使用nano或者vim打开和编辑。打开文件后，在前几行就能看到#Port 22字样，这个代表使用了默认的22端口作为SSH连接使用。因为大家都在使用22端口，所以会有一些扫描机器使用弱密码不断尝试登录，使用lastb命令可以查看登录失败的记录，如下图。233333是尝试登录的账号，144.214.xxx.xxx是发起者的IP，最后面是尝试登录的时间。\n\n因此，我们可以改成高端口，比如35261这种没有特殊含义&#x2F;排列的随机数，以减小被攻击的可能。要注意端口只能在0-65535之间，并且很多低位数的端口，已经被共识的程序占领了，比如80端口是http的，443端口是https的，就如22是SSH的一样。此处，我们修改/etc/ssh/sshd_config中的端口数后，还需要重启SSH服务才行，否则只会在系统下次重启后才启用新的端口。\nsystemctl restart ssh #重启SSH服务\n\nsystemctl是systemd的命令，用于启动和监控系统服务的，在系统内核启动后，systemd就会开始服务，restart即重启的意思。关于systemd的相关内容，后文会详细说明。\n除此之外，把密码改的复杂一些，也可以有效的降低系统被黑的风险，使用passwd root命令，即可修改root账号的密码，会提示New password:，此时输入新密码，注意这里是看不见任何输入反馈的，随后在显示Retype new password:后再次输入一遍，如果两次密码相同，就会更新root密码了。\n2.3 使用密钥登陆SSH即使更改了端口，但因为使用密码即可登录，考虑到不是所有人都会使用强密码，所以SSH提供了使用密钥登录的功能，可以简单理解成是一长串复杂的并且可以相互验证的密码。以root用户为例，演示如何将SSH由密码登录改成密钥登录。\n输入ssh-keygen -t rsa ，随后一路enter键，如下图\n\n在显示完成后，在/root/.ssh/文件夹下，你将看到id_rsa和id_rsa.pub两个文件，id_rsa是私钥，下载下来并妥善保存，id_rsa.pub是公钥，放在服务器上的。将id_rsa.pub写入到SSH的密钥文件中：\ntouch authorized_keyscat id_rsa.pub &gt;&gt; authorized_keys\n\n除此之外，还需要给文件和相关文件夹合适的权限：\nchmod 600 authorized_keyschmod 700 ~/.ssh\n\n这里有个~，它代表的是当前用户，比如现在是root用户，那~就是root，所以chmod 700 ~/.ssh等于chmod 700 /root/.ssh\n现在密钥已经配对好了，还需要修改SSH的配置文件，打开/etc/ssh/sshd_config文件，查找并修改如下：\nPubkeyAuthentication yes # yes表示允许密钥登陆AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2 # 指定密钥的文件位置，这里是去掉了开头的#PasswordAuthentication no # 不允许使用密码登陆，等测试密钥登陆成功了再修改此条，以防无法登陆\n\n使用systemctl restart ssh重启SSH服务，此刻，你将只能使用密钥才能登录，一旦私钥遗失了，就再也进不去了。\n3 Linux文件系统3.1 文件系统格式与Windows分割硬盘（甚至一个硬盘被划分成了好几个）不同，Linux的是将所有硬盘都挂载在了一起。简单来说，Windows分C盘D盘等，还针对软盘额外给予了A盘和B盘，Linux把所有的硬盘都放在了/下，即根目录，这也是Linux中root账户的权限最大的原因，root即为根，如同树根一样，所有的内容都要基于根才有了可能。文件系统是另外一个极其复杂的内容，这里只提到Windows使用的是NTFS，而Linux普遍采用EXT4格式，这两种文件系统互不兼容，装在Linux系统上的硬盘，在Windows上是无法直接读写的，必须使用额外的软件才能访问。反过来，在Linux上读取Windows下的硬盘中的内容，需要安装ntfs-3g才行。这两种文件系统各有优缺点，一般人用就行了，不要问，问就是用默认。实际上，目前在广泛使用的文件系统种类繁多，所有需要在它们之间交换文件的时候，会使用exFAT格式的U盘&#x2F;硬盘（exFAT是FAT的替代品，因为FAT下单个文件最大不能超过4G）。\n3.2 文件树、文件夹功能和权限在/目录下，使用ls -la会显示出所有的文件和文件夹（如下图所示），a是列出所有文件，l是显示详细信息。\n\n第一列是文件&#x2F;文件夹的权限，一共有10个字符，第一位是文件类型，比如d代表文件夹，l代表链接。之后，三个为一组，总共3组。r是读，w是写，x是执行，也可以通过数字来区分，r是4，w是2，x是1，所以有了常见的一把梭chmod +777。第二列是硬链接数量，即这个文件&#x2F;文件夹下有多少真实放着的文件。第三列和第四列是这个件分别属于谁，以及这个人是哪个组的。这里的组概念来源于最开始的unix是个多用户系统，所有会把用户分类，比如某软件用户放一个组，系统维护人员放一个组等。第六列是文件&#x2F;文件夹大小，默认单位是K。第七八九列是修改的日期。最后一列是文件&#x2F;文件夹的名字。我们会发现有一些-&gt;的字样，这是指软链接。软连接类似于Windows上的快捷方式，而硬连接类似于复制了一份（但并不会真的占用空间）。\n\nbin或者usr&#x2F;bin：应用程序，比如Python的主程序就在这里\nboot：系统启动文件\ndev：外部硬件设备，Linux下一切皆文件，所以外部硬件设备也是以文件形式出现\netc：系统的配置文件，比如上述提到的SSH的配置文件就在这里\nhome：用户目录，类似于Windows上的桌面\ninitrd.img：启动文件，可以看到它被软连接到了boot目录中\nlib：库文件，类似于Windows的dll，程序的依赖都在这里\nlost+found：丢失寻找文件，系统被强迫关机后，会在这里记录下来\nmedia：媒体文件，如果系统发现了光盘之类的，会自动挂载到这里\nmnt：临时挂载目录，上述的光盘，还有U盘硬盘，如果手动挂载，都会选择这里\nopt：系统额外软件的安装位置，极少使用，比如甲骨文的数据库会放一些东西在这里\nproc：系统进程&#x2F;内核会把一些信息放到这里，本质上是反应系统状态而不是文件\nroot：root用户的“桌面”，普通用户在home中\nrun：系统启动后存放临时文件\nsbin：root用户的”bin”\nsrv：放服务运行而需要的文件\nsys：文件系统，里面包括进程信息，设备信息和终端信息\ntmp：临时文件\nusr：共享资源，类似于Windows安装软件的默认目录\nvar：不断变化的文件会放在这里，比如日志\nvmlinuz：启动文件，可以看到它被软连接到了boot目录中\n\n如果我们自己写了一个程序，还放在系统里面运行，那一般是在/usr/local/中新建目录，这遵循着Linux系统的默认规则。\n3.3 示例：挂载U盘如果是Ubuntu桌面的话，会自动挂载U盘，但是无GUI版本的Linux大概率不会，所以会需要手动挂载，又或者加了一块新的硬盘，需要我们自己挂载。\nfdisk -lmkdir /mnt/usbmount /dev/sda1 /mnt/usbumount /mnt/usb\n\nfdisk -l是显示出所有的储存，会显示出来类似于/dev/sda1等，mkdir /mnt/usb在mnt目录里面新建一个文件夹，即挂载点，假设sda1就是我们插入的U盘，mount /dev/sda1 /mnt/usb将这块U盘挂载到了/mnt/usb中，这时候我们就能在/mnt/usb中看到U盘里的文件。如果不再需要了，要手动移除这个U盘，使用umount /mnt/usb命令。\n4 Shell&#x2F;Dash入门让人头大，Shell本身就能写一本书了，少说得有300页！这里面夹杂着从Unix开始的一大堆事情，shell的发展，bash和dash的区别与联系，本身的命令，调用系统的命令，交互方式。累了，姑且先把它当成一堆命令拼凑起来的脚本吧。\n还是写个例子，简单介绍一下实际内容，等以后有时间了再继续补充。比如我们想写一个查看CPU和内存使用率的脚本：\n#!/bin/bashecho &quot;which useage do you want to konw?&quot;echo &quot;1 for CPU, 2 for RAM&quot;read choiceif [ $choice -eq 1 ]then   echo &quot;CPU usage&quot;   grep &#x27;cpu &#x27; /proc/stat | awk &#x27;&#123;usage=($2+$4)*100/($2+$4+$5)&#125; END &#123;print usage &quot;%&quot;&#125;&#x27;elif [ $choice -eq 2 ]then   echo &quot;RAM usage&quot;   free -m | grep Mem | awk &#x27;&#123;print ($3/$2)*100 &quot;%&quot;&#125;&#x27;else   echo &quot;WRONG INPUT&quot;fi\n\n细说每一行内容\n#!/bin/bash是指定此文件由&#x2F;bin下面的bash这个程序来执行。\n在Debian 11里面，bash其实是dash，别问dash是什么，就写bash，天王老子来了也写bash。Bash全称是GNU Bourne-Again Shell，bash被从NetBSD（一个Unix的分支）上移植到Debian上，所以叫dash (Debian Almquist Shell)。\necho &quot;which useage do you want to konw?&quot;是输出冒号内的文字\necho &quot;1 for CPU, 2 for RAM&quot;read choice\n\n把输入内容赋值给choice这个变量，即数字1或者2。rcho -p &quot;1 for CPU, 2 for RAM&quot; choice也可以实现相同功能。\nif [ ... ]then\t...\t...elif [ ... ]then\t...\t...else\t...fi\n\n这是一个if…elif…else的判断语句，先经过两次判断，如果都不能成功，那就执行最后一行。\n$choice -eq 1把刚才的choice这个输入变量和数字1对比，注意，要有$才代表变量，不然就默认是文字，-eq是等于的意思。判断是否等于1，是的话就给出CPU使用量，如果不等于1，那就继续判断是否等于2，是的话就给出RAM使用量，如果不等于2，那就输出错误提醒，然后结束。grep是抓取有关键词的那一行，$2是这一行的第几个内容，如下：\n\ngrep Mem抓取到了第二行，即真实内存这一行，$2是内存总量，$3是已经使用了的内存，因此($3/$2)*100就是已经使用了百分之多少的内存，\n5 Crontab定时任务Crontab用于定时任务，比如设定周五晚上运行脚本备份网站，又或者每分钟检查一下CPU使用率等。但除此之外，crontab还有个@reboot功能，即可以在系统启动的时候自动运行指定程序。\n推荐crontab -e，其中的-e是指当前用户，不建议直接使用crontab。首次运行crontab -e的时候，会让选择使用何种编辑工具，这个随便，nano和vim basic都行，什么顺手和习惯就用什么。\n\n如上图，将每隔15分钟，就会使用位于usr/bin中的python3运行位于/usr/local/weather中的weather.py程序。前五个星号其实是设置的时间，推荐去 https://crontab.guru/ 这里直接设置时间（如下图）。第一个星号是分钟，第二个星号是小时，第三个星号是天，第四个星号是月份，第五个星号是每周的第几天。\n\n6 系统权限6.1 root和user，以及sudo上述已经简单的减少了root来源，由于root的权限太高，以至于在实际使用中发现并不安全，而且作为一个初始目的是多用户多终端的操作系统，Linux主要操作都不需要发生在root用户上的。所以这里就有了user这个角色，如果用户多了起来，为了便于管理，也会把某些用户分组，就有了group的概念。以下演示使用root用户新建一个user用户并进入此用户：\n\n如图所示，adduser mjj为新建一个叫做mjj的用户，由于此前并没有除了root之外的用户，所以会使用这个名字作为group&#x2F;组的名字，并且在&#x2F;home文件夹里面生成一个mjj文件夹，即mjj的”桌面“。所以输入两次密码，之后会问一堆问题，都是例行的，一路enter就好，最后会问一下信息对不对，输入y就完成添加新用户了。\n但此时，mjj这个用户的权限是很小的，四舍五入等于没有，连某些文件夹都不能进去更别说执行软件了。使用su mjj切换到mjj用户中，可以在终端中看到已经从root@rn变成了mjj@rn，rn是这台服务器的名字，即为某某在rn这台服务器上。查看以下root文件夹下有些什么东西，结果发现权限不够而被拒绝访问&#x2F;Permission denied。\n\n所以我们要给一个能够临时使用root权限的能力，这被称为sudo。\nsu root #切换回root账号apt install sudo -y #有些时候，纯净安装的Debian系统是没有sudo的，所以要安装一下usermod -aG sudo mjj ##给予mjj用户sudo权限\n\n此时，我们再切换到mjj用户上，在刚才的命令前加上sudo，临时获取root权限，就可以查看了：\n\n在用户首次使用root权限的时候，系统会提示三个准则，也请谨记：\n\n尊重他人隐私；\n输入之前请三思；\n能力越大，责任越大。\n\n6.2 chmod和chownchmod的全称是change mode，是针对于文件夹或者文件，改变它们的权限，这样就可以让某些用户正常使用了。这里不深入探讨chmod的使用详解，仅演示一些常见的内容。chmod +x helloworld.py 这里的x在上面说过，是执行的意思，即赋予此程序被执行的权限，多见于一键脚本里面，让脚本能够正常运行。+是新增权限，如果是-则是去除对应的权限。chmod -R 755 folder/ -R如上述的rm -rf中的r一样，是递归，即从这里开始，下面不论多少层文件夹，都执行这个命令。755是换算下来，则是root用户可以读写执行（1+2+4&#x3D;7），用户和用户组只能读和执行（1+4&#x3D;5），不能对文件进行更改。某些程序会对文件的权限有着极其严重的控制，比如上说的SSH密钥，分别给authorized_keys600的权限和.ssh文件夹700的权限，意味着只能被所有者&#x2F;owner读写，在例子中即为只能被root账户读写。这种设计让没有相应权限的人无法修改密钥登陆的方式，换而言之，隔绝了用户之间的操作，从而增强安全性。\nchown的全称是change owner，是用于设置文件所有权的。由于归属者的概念并没有文件这个概念常见，所有chown比较少见到，大多数人接触到的时候，大概是建网站的时候用chown -R www-data:www-data-group /var/www/html来确定文件关联。这句的意思是，将/var/www/html这个文件夹及里面的所有文件都归给www-data-group用户组的www-data用户。这样做的目的是实现权限分离，文件分离，从而让服务器可以更方便的被维护，以及明确使用途径。不过考虑到mjj大部分都是使用VPS的，可能很难遇到需要chown的情况吧。\n不要chmod +777！不要chmod +777！不要chmod +777！人才是服务器安全的最大漏洞！\n7 Systemd入门和配置7.1 开机自启和进程守护Systemd是由Redhat家的Lennart Poettering开发的，其人以创造性和不靠谱闻名，Systemd在最开始的时候，和init相比没有明显优势，经过多次迭代才有了今天的稳定性和适用性，现在就让老旧的init进入历史垃圾桶吧。事实上，在Linux系统启动的时候，一旦kernel运行了，Systemd就会跟随启动，之后由Systemd唤醒并维护各个程序的正常运行，比如网卡，显示器，SSH服务等。你会在/etc/systemd/system/文件夹中发现一个叫做sshd.service的文件，并且还是enable模式的，这意味着SSH是开机自启的，并且系统会一直监控这这个程序，如果程序崩溃，系统会尝试自动重启它以确保能够正常运行。\n以著名的内网穿透frp的服务器端的Systemd文件为例（下节将详细介绍如何搭建frp），将frps.service放到/etc/systemd/system/文件夹中，使用以下命令\nsystemctl enable frps.servicesystemctl start frps.servicesystemctl status frps.servicesystemctl restart frps.service\n\nsystemctl是systemd在系统中的程序名字，enable是指让这个程序能够开机自启，start为让程序现就运行，status是查看这个程序现在的状态，restart是重启程序。\n当然，我们也可以自己写systemd的service文件，这里以 https://github.com/cnsilvan/UnblockNeteaseMusic 解锁网易云音乐的程序做参考\n[Unit]Description=UnblockNeteaseMusicAfter=network.targetWants=network.target[Service]Type=simpleWorkingDirectory=/usr/local/UnblockNeteaseMusicExecStart=/usr/bin/node app.js -e http://music.163.com -s -p 8888RestartPreventExitStatus=23Restart=always[Install]WantedBy=multi-user.target\n\n一共分为三组，分别为Unit，Service和Install。Unit是这个服务的名称，示例中为UnblockNeteaseMusic而After和Wants指明的network.target意味希望这个程序在网络服务启动后再启动，毕竟是个网络功能，不能还没有网就启动了。Service是核心部分，Type指定了类型,Simple是默认的类型，发现有网了就启动。此外，常见的还有fork和idle，前者意味着程序依赖于另外一个程序的运行，通常还会配置PIDFile，后者是等系统空闲了再启动，属于一点都不急的。WorkingDirectory是工作目录，ExecStart是执行的命令，实例中，是用位于/usr/bin/的nodejs执行位于工作目录的app.js这个文件，并且还带了参数http://music.163.com -s -p 8888。RestartPreventExitStatus是指如果报错信息为23则不会再重启了，具体报错信息是运行的程序决定的。Restart=always指只要不是23的报错信息，那就一旦服务停了，Systemd就会去重启。最后一部分，Install中的WantedBy=multi-user.target指网络服务已经正常启动，也可以让用户登录了，但是并没有开启GUI服务，这个部分不用去探究。\n7.2 Timer代替Crontab我写了一个自动登录百度贴吧并签到的shell脚本，想每天都运行一次帮我拿积分，但是又不想用crontab实现定时任务，那么Systemd也是有类似的功能的，名字叫做Timer，即定时器。这个功能需要两个文件，比较繁琐。\n需要再/etc/systemd/system/中写两份配置文件，tieba.service和tieba.timer，前缀必须一样，后缀不同。\n前者很简单，就是个脚本（如下），名字和程序的路径：\n[Unit]Description=Tieba Sign[Service]ExecStart=/home/tieba.sh\n\n后者tieba.timer需要详细解释：\n[Unit]Description=Tieba Sign Timer[Timer]OnCalendar=*-*-* 12:00:00[Install]WantedBy=timers.target\n\nTimer的名称需要是service名字后面加一个Timer，用以提高准确性。OnCalendar类似于corntab的* * * * *，实例中的意味每天中午12点的时候执行以下tieba.service中的位于/home文件夹的tieba.sh这个程序。此处的WantedBy是timers.target，指明是个定时器。\n8 手动配置系统：以frp为例frp是个内网穿透软件，可以将局域网设备通过frp服务端映射出来，实现公网服务，常见的有SSH、http&#x2F;https服务等。这里以将内网设备的SSH映射到有公网IP的服务器上为例，从而不在家也能服务家里面的服务器了。\n在这里下载最新版的安装包 https://github.com/fatedier/frp/releases \n\n如图所示，0.38.0是版本号；后面的是系统，darwin是MacOS，freebsd是UNIX的一个分支，这里我们选择linux；紧跟着的是CPU架构，由于本次服务器的客户端是装了64位系统的树莓派4B（arm架构的CPU），所以选择frp_0.38.0_linux_arm64.tar.gz，而服务端是普通的VPS，所以选择frp_0.38.0_linux_amd64.tar.gz。\n服务端配置\n注意：版本号和CPU架构须按照实际情况决定。\nwget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_amd64.tar.gz# 使用wget下载软件包tar -zxvf frp_0.38.0_linux_amd64.tar.gz# 解压下载的软件包cd frp_0.38.0_linux_amd64/# 进入解压后的文件夹mkdir /etc/frp/# 新建一个frp的文件夹mv frps.ini /etc/frp/frps.ini# 把服务器端的配置文件放到刚才新建的文件夹mv frps /bin/# 把服务器端软件放到/bin中mv systemd/frps.service /etc/systemd/system/frps.service# 放置Systemd文件systemctl enable frps.service# 设置开机自启systemctl start frps.service# 立即运行\n\n客户端配置\nwget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_arm.tar.gztar -zxvf frp_0.38.0_linux_arm.tar.gzcd frp_0.38.0_linux_arm/mkdir /etc/frp/mv frpc.ini /etc/frp/frpc.inimv frpc /bin/mv systemd/frpc.service /etc/systemd/system/frpc.service\n\n上述与服务器配置类似，就不重复了，但需要额外修改服务端的配置文件，让它知道该和谁连接，打开/etc/frp/frpc.ini配置文件\n[common]server_addr = 服务器ipserver_port = 7000[raspi]type = tcplocal_ip = 127.0.0.1local_port = 本地服务器的SSH端口remote_port = 远程端口\n\n其中，需要填写服务器端的IP，7000端口是握手和保活用的，默认就好了。[raspi]是客户端的名字，不可以重复，local_port是客户端的SSH端口，remote_port是远程的端口，此处假设是6000。\nsystemctl enable frpc.servicesystemctl start frpc.service\n\n设置开机自启并立即运行，此时在SSH软件上，通过 服务器IP:6000 就可以连接到这台内网的树莓派了。\n9 网站环境搭建网站搭建，说简单也简单，安装一个nginx放个html页面就算是了，但也可以做的极其复杂以至于需要一个团队，比如淘宝。这里提供了两个搭建网站的方法：面板和手动搭建。对于小白用户，还是推荐用用面板吧，不然出问题，网站被黑都不知道如何解决。\n9.1 宝塔解人忧宝塔面板是个伪开源的一键式建站面板，国内版可以在 https://www.bt.cn/ 中找到安装方式，目前的安装命令是wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh 。需要注意的是，国内版需要登陆并且验证手机号后才能操作，宝塔也有强制后台升级的前科。\n\n除此之外，还有国际版的叫做aapanel，安装地址为 https://www.aapanel.com/install.html ，安装命令是wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh。相对而言，国际版的隐私保护会更好一些，不会要求手机号等信息，但是默认语言是英文，如果会哪怕一点点英文，都推荐使用国际版的。\n宝塔有一点不好的地方是动辄编译（原先是在CentOS上开发的，所以有这个臭毛病），面板是python3写的，安装起来很快，但是要安装一些服务的话，如果VPS性能不好，则需要花费相当长一段时间来编译安装，普遍30分钟起步。\n9.2 手动搭建宝塔面板是将网站搭建可视化了，本质上和手动搭建没有区别。这里主要是介绍常见的相关软件和Let’s Encrypt配置SSL证书的方法。\n9.2.1 Apache和NginxApache和Nginx都是Web服务器。前者是老牌Web服务器软件，对PHP有着优秀的支持，并且动态响应优秀，但是对性能和内存要求高。后者是俄罗斯出品，对静态网站支持良好，性能消耗也更小，反代和简单的网站都倾向于使用Nginx，甚至还有一系列基于Nginx衍生出来的版本，比如Tengine就是淘宝从Nginx衍生出来的，用以支撑淘宝的各种服务。除此之外，还有个Caddy也用的比较多，这是由golang语言写出来的，所以对多线程高并发的支持很好，并且自带SSL证书申请的功能。\n入门用户首选Nginx，毕竟网站没有什么服务，对VPS的性能消耗也少点。当然，选择Apache也完全可以，入门用户其实很难用到需要对比选择Apache和Nginx的时候。Caddy的话，先不推荐入门用户了。\n安装Apache使用以下命令\napt install apache2\n\n安装Nginx使用以下命令\napt install nginx\n\n这两个软件安装完后，都会开机自启和立刻运行，浏览器中输入http://ip就可以看到默认的网页，比如Nginx的是这样：\n\n9.2.2 PHP安装了Nginx之后，可以实现静态网页，但是常见的网站平台，比如Wordpress和typecho都是PHP写的，所以还需要安装PHP才能运行。\napt install php-fpm\n\n安装完php还不算完事，还得让Nginx知道，也就是需要更改Nginx的配置文件。\n进入目录/etc/nginx/sites-available/中，将默认的文件default重命名为网站的域名，比如mjj.hostloc.com，即mv default mjj.hostloc.com，打开mjj.hostloc.com，在下述的第二行末尾加入index.php\n# Add index.php to the list if you are using PHPindex index.html index.htm index.nginx-debian.html index.php; # 注意加入了index.php\n\n并且将下述的_改成网站域名\nserver_name _;# 改成 server_name mjj.hostloc.com;\n\n随后，重新软链接，并重启Nginx\nrm /etc/nginx/sites-enabled/defaultln -s /etc/nginx/sites-available/mjj.hostloc.com /etc/nginx/sites-enabled/mjj.hostloc.comsystemctl restart nginx\n\n注意域名不要填错了，重启完后，Nginx将能够和PHP一起支持动态网站。\n9.2.3 MySQL和MariaDBMySQL是一个市场占有率极大的数据库软件，应用场景极其广泛，最开始是SUN公司开发的，2009年被甲骨文收购。甲骨文作恶多端，所以MySQL的一部分作者则独立出来，直接做了一个复刻版的，被命名为MariaDB，Maria是作者女儿的名字，Linux社区逐步放弃MySQL而采用MariaDB。所以在近期发布的各Linux版本中，默认是没有MySQL的，一律采用MariaDB。\napt install mariadb-server # 安装数据库mysql_secure_installation # 首次配置\n\n由于是首次使用，所以在如下提示中，直接enter键就可以了，因为数据库的root用户此时并没有密码\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#x27;ll need the currentpassword for the root user.  If you&#x27;ve just installed MariaDB, andyou haven&#x27;t set the root password yet, the password will be blank,so you should just press enter here.Enter current password for root (enter for none): \n\n随后，会询问是否要设置数据库的root密码，怎么说呢，反正就建个站而已（不涉及多用户多服务），有没有无所谓，我习惯性的不设置（输入N）\nOK, successfully used password, moving on...Setting the root password ensures that nobody can log into the MariaDBroot user without the proper authorisation.Set root password? [Y/n] N\n\n现在，新建一个用户和对应的数据库\nmysql # 进入数据库，如果有root密码，则是mysql -u root -pCREATE DATABASE name; # 新建数据库，name是数据库名字Query OK, 1 row affected (0.00 sec) #此段为mySQL反馈提示，不需要输入。CREATE USER user@localhost; # 新建用户，user是用户名字Query OK, 0 rows affected (0.00 sec) #此段为mySQL反馈提示，不需要输入。SET PASSWORD FOR user@localhost= PASSWORD(&quot;密码&quot;); # 给用户设置一个密码Query OK, 0 rows affected (0.00 sec) #此段为mySQL反馈提示，不需要输入。GRANT ALL PRIVILEGES ON name.* TO user@localhost IDENTIFIED BY &#x27;密码&#x27;; # 把name这个数据库和user这个用户关联Query OK, 0 rows affected (0.00 sec) #此段为mySQL反馈提示，不需要输入。FLUSH PRIVILEGES; # 完成设置exit # 退出数据库\n\n\n\n9.2.4 Let’s Encrypt，SSL&#x2F;TLShttp连接，由于不是加密的，所以任何人都可以查看内容，这对于一些金融服务有着巨大的危害，比如使用信用卡在网上购物的时候，账号和密码会被获知。所以网景（Firefox浏览器的前身）提出了SSL（安全套接层&#x2F;Secure Sockets Layer）这个概念（后来演变升级为TLS，即传输层安全性协议&#x2F;Transport Layer Security），http变成了https，电脑会内置证书，而网站也会有一个证书，只有两者相互验证成功，才能正常浏览玩网页，并且全程加密（DNS部分并不是加密的，所以有个DoH，dns over https）。\nSSL&#x2F;TLS证书是个垄断行业，电脑内置的证书就那么几家，如果想网站被大多数浏览器&#x2F;系统接受，那就只能去申请其中某家的证书，这里面层层签发转售，几近无本万利。不过好在还是有很多免费的SSL&#x2F;TLS证书的，比如Let’s Encrypt提供三个月的免费证书，而亚洲诚信通过第三方公司，提供一年免费的证书。这里以Let’s Encrypt为例演示，相关链接为 https://certbot.eff.org/instructions ：\n\nLet’s Encrypt提供的SSL&#x2F;TLS工具叫做cerbot，可以通过snap或者pip安装。snap是Ubuntu强推的一种软件部署和软件包管理系统，把所有需要的东西都放一起。pip是通过python3的pip安装，pip和snap没有功能上的区别，不想被Ubuntu强推就使用pip。\nsnap安装cerbot申请SSL&#x2F;TLS证书\napt install snapdsnap install coresnap refresh coresnap install --classic certbotln -s /snap/bin/certbot /usr/bin/certbotcertbot --nginx\n\n然后按照提示，输入邮箱和同意服务协议，并且在提示域名的时候，注意不要输错。\npip安装cerbot申请SSL&#x2F;TLS证书\napt install python3 python3-venv libaugeas0python3 -m venv /opt/certbot//opt/certbot/bin/pip install --upgrade pip/opt/certbot/bin/pip install certbot certbot-nginxln -s /opt/certbot/bin/certbot /usr/bin/certbotcertbot --nginxecho &quot;0 0,12 * * * root /opt/certbot/bin/python -c &#x27;import random; import time; time.sleep(random.random() * 3600)&#x27; &amp;&amp; certbot renew -q&quot; | sudo tee -a /etc/crontab &gt; /dev/null\n\n相比于snap自动每三个月更新证书，pip需要通过crontab加一个定时任务（上述最后一行），另外，也需要偶尔检查以下certbot有没有更新，即使用此命令/opt/certbot/bin/pip install --upgrade certbot certbot-nginx\n10 Docker快速入门Docker的本意是“码头工人”，即搬运别人打包好的集装箱。之所以取这个名字，是因为Docker的功能与此类似：将系统和里面的应用一起打包好，别人“搬走”就能直接使用——可以将Docker粗略的理解成一个包含了系统和应用的虚拟机（严格来说，Docker是使用了沙箱机制的虚拟化容器）。常见的例子就是别人把某一个软件配置好了，用户直接下载下来，简单设置一下就可以使用了，不需要繁杂的配置过程，所以在批量服务中有着广泛的应用场景。Docker分为社区版&#x2F;CE（Community Edition，免费的）和企业版&#x2F;EE（Enterprise Edition，收费的），两者功能无本质区别，以下默认使用社区版。\n10.1 安装Docker环境apt update # 同步更新源apt install -y ca-certificates curl gnupg lsb-release # 安装必要依赖软件\n\n添加GPG密钥，注意这里和上面一样，必须是root权限（如下命令）。这里简单介绍一下GPG，全称是GnuPG，真·全称是GNU Privacy Guard，一个密码学软件，用来验证通信中的安全性，防止传输过程中被篡改，前身是Pretty Good Privacy&#x2F;PGP。\ncurl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n选择使用稳定版，如果需要nightly或者test版，可以把下面的stable改成对应的版本。\necho &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable&quot; | tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n更新并安装Docker\napt updateapt install -y docker-ce docker-ce-cli containerd.io\n\n期间会下载几百兆的文件，网络不好的话，可能会需要一段时间，当完成安装后，使用docker run hello-world命令来测试功能是否正常，理论上会输出下图内容：\n\n至此，系统已经安装好了Docker环境，可以自己写一个Docker的应用，或者直接拉取别人写好的为自己所用。\n10.2 安装别人打包好的的Docker先说一下常用的Docker命令，然后以安装Docker版本的Nextcloud为例。Nextcloud是一个开源的网盘系统，类似于私有版本的百度云，可以自己搭建从而确保数据都在自己手上而不会被8秒。\n10.2.1 常用Docker命令docker ps 列出所有正在运行的容器，如果需要查看所有的容器（包括未运行或者启动失败的）则使用docker ps -la，这点类似于ls和ls -la的区别。\ndocker start/stop/restart CONTAINER ID 开启&#x2F;停止&#x2F;重启特定容器，后面要加上指定的ID，CONTAINER ID见下文。\ndocker rm CONTAINER ID 删除容器，如果是删除镜像，则需要把rm换成rmi\n10.2.2 安装Docker版Nextcloud在 https://hub.docker.com/ 中直接搜索Nextcloud，找到官方版本的镜像，点击进去，在右侧有拉取镜像的命令，直接运行即可。\n\n安装过程中会下载各个组件，等全部显示Pull conplete即表示下载完成，之后会自动校验并提示完成。\n\n使用docker run -d -p 80:80 nextcloud 运行，此时使用docker ps可以查看到具体的详细信息\n\nCONTAINER ID类似于身份证号码；IMAGE是身份证上的姓名；COMMAND是实际运行的程序；CREATED是创建的时间；STATUS是此时的运行状态；PORTS是端口，上述我们把容器的80端口定向到服务器的80，并且默认ipv4和ipv6都可以访问，接受所有IP的访问（0.0.0.0代表接受所有IP）；NAMES是容器的名字，可以理解为外号。\n之后就是通过IP或者绑定的域名访问，进行最后的安装。这里就能看出来Docker的优势了：用户无需了解具体操作和搭建步骤，提供者负责维护，这可以极大的简化用户的使用步骤，还可以标准化环境，无论使用Debain还是REHL，镜像&#x2F;容器都是提供者给定的。\n\n如果不再需要Nextcloud，则首先停止容器，随后再删除：\ndocker stop c30d348f1ef1docker rm c30d348f1ef1\n\n\n\n10.3 建自己的DockerDocker通过Unix socket与它的引擎进行通信，出于安全考虑，一般只有root用户和在docker组的用户才能正常访问Unix socket。所以，如果想建一个完善的Docker应用，那么建议额外新增一个用户，并加入docker用户组。\n","categories":["liunx"],"tags":["mjj","命令","linux"]},{"title":"使用 rclone 每天定时备份博客网站内容及mysql数据库到 Google Drive/Onedrive等网盘","url":"/2022/11/22/rclone-Google-Drive-Onedriv/","content":"RCLONE 官方提供了一键安装脚本curl https://rclone.org/install.sh | sudo bashrclone config\n备份脚本编写及授权\n创建脚本文件：\n\nmkdir /home/Backup\nchmod +x /home/Backup\ntouch /home/Backup/backup.shvi /home/Backup/backup.sh\n#!/bin/bash\n# 定义GOOGLE DRIVE的备份目录\nGD_PATH=\"GdriveBackup:Backup\"\n\n# 定义备份的目录及文件，不同的目录用空格分开\nBACKUP_SRC=\"/home/wwwroot/omo.moe/usr\"\n\n# 定义临时文件存放目录\nBACKUP_DST=\"/home/Backup\"\n\n# 设置MYSQL基本信息 \nMYSQL_SERVER=\"localhost\"\nMYSQL_USER=\"root\"\nMYSQL_PASS=\"your password\"\n\n# 定义想要备份的数据库，多个数据库用空格分开\nBACKUP_DATABASE=\"typecho_omo\"\n\n# 定义文件前缀名\nNOW=$(date +\"%Y.%m.%d\")\nOLD=$(date -d -5day +\"%Y.%m.%d\")\n\n# 备份网站数据文件\nzip -r $BACKUP_DST/auto_fileData_$NOW.zip $BACKUP_SRC\n\n# 备份mysql数据库\nmysqldump -u $MYSQL_USER -h $MYSQL_SERVER -p$MYSQL_PASS --databases $BACKUP_DATABASE &gt; $BACKUP_DST/$NOW-auto-Databases.sql\n\n# 使用rclone上传到google drive\nrclone copy -v --stats 15s --bwlimit 40M $BACKUP_DST/ --include \"$NOW-auto-Databases.sql\" --include \"auto_fileData_$NOW.zip\" $GD_PATH\n\n# 删除本地的临时文件\nrm -f $BACKUP_DST/$NOW-auto-Databases.sql $BACKUP_DST/auto_fileData_$NOW.zip\n\n# 删除5天前的备份\nrclone delete $GD_PATH/ --include \"$OLD-auto-Databases.sql\" --include \"auto_fileData_$OLD.zip\"\n\n\n使用chmod指令赋予执行权限：\nchmod +x /home/Backup/backup.sh\n三、创建自动备份任务并测试\n使用 crontab 每天4点定时执行自动备份脚本：\ncrontab -e\n复制以下内容粘贴并输入:wq保存：\n0 4 * * * /bin/bash /home/backup/backup.sh &gt;/dev/null 2&gt;&amp;1\n手动测试看看脚本是否正确运行：\nbash /home/Backup/backup.sh\n时区设置为东八区：\ntimedatectl set-timezone Asia/Shanghai\n重启定时任务：\nservice crond restart\n重启系统日志：\nservice rsyslog restart\n最后观察下系统日志尾巴状态，是否时区已经调整成功：\ntail -f /var/log/cron\n转：https://omo.moe/archives/616/\n","categories":["vps"],"tags":["rclone","备份"]},{"title":"vps常用一键脚本与命令","url":"/2022/11/10/vps%E5%B8%B8%E7%94%A8%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E4%B8%8E%E5%91%BD%E4%BB%A4/","content":"更新源\napt update &amp;&amp; apt upgrade -y\n安装常用软件\napt install net-tools vim wget git screen curl xz-utils unzip sudo zip t -y\n\nssh与宝塔出现乱码\nubuntu与debian适用\nsudo echo 'LC_ALL=\"en_US.UTF-8\"' &gt;&gt; /etc/default/locale\n开启宝塔ipv6\necho True &gt; /www/server/panel/data/ipv6.pl\n\nbt restart\n服务器时间\nsudo dpkg-reconfigure tzdata\n免密登录，公钥换成自己的\nmkdir /root/.ssh;echo \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN+I1HhcBcgv/6WGPTmnsUuV3cun1mUOAmwBdJnk7JwL xingchen\n\" &gt;&gt;/root/.ssh/authorized_keys\n&nbsp;\n\n\n\ncaddy安装\necho \"deb [trusted=yes] https://apt.fury.io/caddy/ /\" | sudo tee -a /etc/apt/sources.list.d/caddy-fury.list\n\napt install caddy\n开启ubuntu与debian bbr加速\necho \"net.core.default_qdisc=fq\" &gt;&gt; /etc/sysctl.conf echo \"net.ipv4.tcp_congestion_control=bbr\" &gt;&gt; /etc/sysctl.conf\n测试IPv4优先还是IPv6优先\ncurl ip.p3terx.com\n测试25端口是否开放\ntelnet smtp.aol.com 25\n\n非大陆Docker安装\nwget -qO- get.docker.com | bash\n非大陆Docker-compose安装 \nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose"},{"title":"在LNMP环境下实现反向代理","url":"/2022/11/10/%E5%9C%A8LNMP%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%9E%E7%8E%B0%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","content":"安装LNMP稳定版只需要安装nginx\nwget http://soft.vpser.net/lnmp/lnmp1.9.tar.gz -cO lnmp1.9.tar.gz &amp;&amp; tar zxf lnmp1.9.tar.gz &amp;&amp; cd lnmp1.9 &amp;&amp; ./install.sh nginx\n\n\n\n添加网站(虚拟主机)\nlnmp vhost add\n编辑网站nginx配置文件\ncd usr/local/nginx/conf/vhost\nls\nxxx.com.conf\n配置Nginx文件，将下列代码插入nginx文件中，注意端口、路径要保持一致\nlocation /app\n{\nproxy_redirect off;\nproxy_pass http://127.0.0.1:8443;\nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection \"upgrade\";\nproxy_set_header Host $http_host;\n}\n","categories":["lnmp"]},{"title":"ArmBian做ZeroTier内网穿透","url":"/2020/10/09/8/","content":"Linux最简单的安装方法：\ncurl -s https://install.zerotier.com/  sudo bash\n\n无任何报错显示：\n*** Waiting for identity generation...\n\n* Success! You are ZeroTier address [ d56f99571f ].把zerotier服务复制到系统服务目录并激活\nsystemctl daemon-reloadsystemctl start zerotier-onesystemctl enable zerotier-one //开机启动\n\n察看状态：\nzerotier-cli info\n\n演示：\n[root@instance-1 ~]# zerotier-cli info200 info d56f99571f 1.2.12 ONLINE最后加入zerotier网络：\nzerotier-cli join  //你的Zeroiter网络ID\n\n彻底卸载Zerotier-one通过dpkg删除zerotier-one服务\nsudo dpkg -P zerotier-one\n\n删除zerotier-one文件夹，该文件夹存储了address地址，删除后再次安装会获得新的address地址\nsudo rm -rf /var/lib/zerotier-one/\n\n服务**\nsudo dpkg -P zerotier-one\n\n删除zerotier-one文件夹，该文件夹存储了address地址，删除后再次安装会获得新的address地址\nsudo rm -rf /var/lib/zerotier-one/","categories":["默认分类"]},{"title":"甲骨文(ARM/x86均可) 使用netboot任意重装系统-silence","url":"/2022/11/22/%E7%94%B2%E9%AA%A8%E6%96%87/","content":"\n甲骨文(ARM&#x2F;x86均可) oracle cloud使用netboot任意重装系统\n一.创建控制台连接 注意:创建vps时候记得开默认的系统,oracle linux,其他系统的bios和它不一定相同(试过ubuntu是不一样的,其他没尝试过)这里我选择用本地的wsl生成了ssh key命令如ssh-keygen -t rsa   cat .ssh/id\\_rsa.pub即可获得你的ssh公钥   然后去创建控制台连接粘贴密钥   创建完成后,复制linux的串口连接命令   再将命令复制到刚才的linux系统里就可以连接了,连接时候会有警告,输入yes即可   \n二.下载netboot.efi 这是重装系统前的最后一步,去netboot.xyz下载EFI引导文件x86_64:https://boot.netboot.xyz/ipxe/netboot.xyz.efi \narm64:https://boot.netboot.xyz/ipxe/netboot.xyz-arm64.efi  将efi文件wget到vps的/boot/efi/EFI文件夹下即可   \n三.开始重装 连接上串口连接后,去网站控制台重启vps,然后回到连接中,狂按ESC,即可进入bios这里选择第三项`Boot Maintenance Manager`按回车进入   选择Boot From File  然后再按一次回车进入默认的硬盘,选择EFI文件夹下的netboot.efi进入netboot   这是启动netboot后的界面,选择Linux Network Installs开始安装  可以看到能安装的系统相当多,我这里选择安装debian11   安装时候记得选择Text Based Install 这样再次重新启动后，系统正常情况下是自动启动进iPXE当中去而不是默认的Debian&#x2F;Ubuntu中去  进了netboot.xyz的启动功能后，用   chain –autofree http://boot.netboot.xyz 再从列表中选择自己要的系统，比如CentOS或Debian ARM 用 netboot.xyz装 CentOS 会下载不到内核，手动下载一下就行； x86_64 CentOS 不能装版本大于7.2的，因为内存不够。\n","categories":["vps"],"tags":["甲骨文"]},{"title":"docker filebrowser","url":"/2022/02/18/79/","content":"创建目录mkdir /home/videosmkdir /home/videos/cam01cdmkdir filebrowsercd filebrowsertouch filebrowser.db\n\n运行dockerdocker run -d \\--name filebrowser \\-v /:/srv/ \\-v /root/filebrowser/filebrowser.db:/database.db \\--user $(id -u):$(id -g) \\-p 8088:80 \\--restart=always \\filebrowser/filebrowser","categories":["网络资源"]},{"title":"玩客云官方系统ROOT安装哪吒探针","url":"/2022/02/23/80/","content":"下载哪吒 nezha-agent_linux_arm.tar.gz哪吒上传ROOT目录给于权限\nchmod 755 nezha-agent\n\n设置开机自起\ncd /etc/init.dtouch S96nezhachmod 755 S96nezhaecho &quot;sleep 10&quot;        &gt;&gt; S96nezhaecho &quot;cd&quot;        &gt;&gt; S96nezhaecho &quot;/root/nezha-agent -s 面板网址:接收端口 -p 唯一秘钥 -d&quot;    &gt;&gt; S96nezha\n\n玩客云重启\n","categories":["默认分类"]},{"title":"如何在 Ubuntu 上安装 NGINX","url":"/2022/11/29/buntu-NGINX-web/","content":"NGINX是一个开源的Web服务器软件。您可以将NGINX部署为独立的Web服务器，也可以部署为其他Web服务器前面的代理（实质上是反向代理）。Nginx 是托管高流量网站的最佳网络服务器之一。\n在本教程中，我们将重点介绍如何在Ubuntu 20.04 上将 NGINX 安装为独立的 Web 服务器。\n在 Ubuntu 20.04 上安装 NGINX首先运行sudo apt-get update以检索有关新的和更新的软件包的信息，然后再继续安装NGINX。\nNginx 在 Ubuntu 软件包存储库中可用。因此，使用以下命令很容易安装 Nginx：\nsudo apt-get install nginx检查 NGINX 服务状态让我们做一个快速检查以确认NGINX服务的状态，运行以下命令：\nsudo systemctl status nginx上述命令的输出确认 NGINX 处于活动状态并正在运行。如果您收到一条消息，指示 NGINX 处于非活动状态、未启动或未运行，则可以通过运行以下命令手动启动 NGINX 服务。\nsystemctl start nginx要检查 Nginx 版本，请运行：\nsudo dpkg -l nginx输出显示，在编写本教程时，Nginx 版本 1.18.0正在 Ubuntu 20.04 上运行。\n测试 NGINX Web 服务器确认NGINX服务处于活动状态并正在运行后，您现在可以通过打开首选的Web浏览器并输入安装了NGINX的服务器的IP地址（http：&#x2F;&#x2F;your_server_ip）来测试Web服务器。\n您应该会看到标题为“欢迎来到nginx！”要在端口 443 上允许 NGINX，请执行以下操作：\nsudo ufw allow &#39;Nginx HTTPS&#39;设置 NGINX 服务器块如果您想在同一台NGINX Web服务器上托管多个网站，则需要设置服务器块。服务器块也称为虚拟主机（主要在 Apache 中）。\nNGINX只预配置了一个服务器块，这是默认网站（&#x2F;etc&#x2F;nginx&#x2F;sites-available）的配置细节存储的地方（&#x2F;var&#x2F;www&#x2F;html）。\n一起来看看吧。\n\nsudo ls -l &#x2F;etc&#x2F;nginx&#x2F;sites-availabletotal 8-rw-r–r– 1 root root 2416 Mar 26  2020 default\n\n运行以下命令以显示默认服务器块文件的内容。\nsudo cat /etc/nginx/sites-available/default | more按键盘上的空格键可一次向下滚动一页。您将看到该文件包含默认的服务器配置详细信息，例如侦听端口号，文档根目录（即存储网站内容的基本文件夹），索引文件和服务器名称。\n您还应该看到标题为“虚拟主机配置”的部分，如下所示。您可以在此处配置其他网站，但最好创建一个单独的服务器块文件并保留默认文件。/etc/nginx/sites-available/default\n# Virtual Host configuration for example.com## You can move that to a different file under sites-available/ and symlink that# to sites-enabled/ to enable it.##server &#123;#\tlisten 80;#\tlisten [::]:80;##\tserver_name example.com;##\troot /var/www/example.com;#\tindex index.html;##\tlocation / &#123;#\t\ttry_files $uri $uri/ =404;#\t&#125;#&#125;\n同时，复制上面的示例配置信息并将其保存在文本编辑器中。我们将很快使用这些信息。\n创建网站根目录接下来，您需要在 &#x2F;var&#x2F;www下创建一个根文件夹来存储其他网站的内容。例如，我将为我的 domain1.com 网站创建一个名为 domain1.com 的文件夹。\n注意：您应该将域名 1 替换为您自己的注册域名。您还应该更新DNS记录，以将您的域名指向NGINX Web服务器的公共IP地址。\nsudo mkdir /var/www/domain1.com创建索引文件索引文件是打开网站时显示的主网页。运行以下命令为其他网站创建索引文件。\nsudo nano /var/www/domain1.com/index.html我在这个例子中使用了nano，但你可以使用你最喜欢的文本编辑器。接下来，您可以复制并粘贴以下 HTML 代码以进行测试。\n&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Welcome to Domain1!&lt;/title&gt;&lt;style&gt;body &#123;width: 35em;margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to Domain1!&lt;/h1&gt;&lt;p&gt;If you see this page, the Domain1 website is working!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\n保存更改并关闭文本编辑器。\n创建服务器块下一步是创建服务器块文件以保存其他网站的配置详细信息。运行以下命令。\nsudo nano /etc/nginx/sites-available/domain1复制之前保存的示例虚拟主机配置信息，并将其粘贴到新文件中。从“服务器”行开始，确保删除所有#符号以取消注释指令。另外，请记住将“domain1”替换为您自己的注册域名。\n# Virtual Host configuration for example.com## You can move that to a different file under sites-available/ and symlink that# to sites-enabled/ to enable it.#server &#123;       listen 80;       listen [::]:80;       server_name domain1.com www.domain1.com;       root /var/www/domain1.com;       index index.html;       location / &#123;               try_files $uri $uri/ =404;       &#125;&#125;\n保存更改并关闭此文件。启用服务器块要让 NGINX 知道其他网站可用，请运行以下命令以创建指向服务器块文件的符号链接。\n ln -s /etc/nginx/sites-available/domain1 /etc/nginx/sites-enabled测试您的配置运行sudo nginx -t以测试您的服务器块配置。您应该会看到一条消息，指示一切正常。\nsudo nginx -tnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successful\n您可以运行sudo 服务 nginx重新加载来重新加载配置文件。\n测试您的新网站打开网络浏览器并输入您的新网站地址。您应该看到为新网站创建的索引文件的内容，而不是默认的NGINX网页。控制NGINX的基本命令让我们学习基本的Nginx命令来管理你的Web服务器。\n重新启动命令将停止该服务，然后重新启动它。\nsudo systemctl restart nginxreload命令告诉 NGINX 重新加载其配置文件，但不停止服务。sudo systemctl reload nginx\nstop命令将停止 NGINX 服务。\n sudo systemctl stop nginx要使Nginx 服务能够在启动时启动，请运行\nsudo systemctl enable nginx注意：默认情况下，Nginx服务启用为在服务器启动时自动启动。\n基本NGINX配置和日志文件/etc/nginx –包含所有 NGINX 配置文件\n/etc/nginx/sites-available–包含服务器块文件，这些文件存储为一个或多个网站提供服务的配置详细信息\n/etc/nginx/sites-enabled –包含一个或多个已启用网站的配置文件\n/etc/nginx/nginx.conf –主配置文件，也读取其他文件中的配置指令\n/var/log/nginx/access.log –用于存储有关您网站的所有访问的信息的默认位置\n/var/log/nginx/error.log –存储 NGINX 错误的默认位置\n结论通过遵循本指南，您应该能够在 Ubuntu 20.04 服务器上启动并运行一个或多个网站。但是，如果您遇到任何问题，请随时在下面的评论部分告诉我们，我们将尽最大努力为您提供帮助。转:https://linoxide.com/install-nginx-on-ubuntu-20-04/\n","categories":["vps"],"tags":["nginx"]},{"title":"ubuntu-debian安装ACME","url":"/2022/11/30/ubuntu-debian-ACME/","content":"获取 acme.shacme.shshell 脚本可自动颁发和续订来自 Let’s Encrypt 的免费证书。您可以通过直接从 Web 下载脚本或克隆其 git 项目来获取 acme.sh 脚本。从网络下载 acme.sh运行以下两个命令中的任何一个以下载并执行 acme.sh 脚本。curl https://get.acme.sh | sh -s email=xx@cc.comwget -O -  https://get.acme.sh | sh -s email=xx@xx.net安装出现错误，安装crontab与socatapt install cron socat -y一旦看到“安装成功！”消息，您都可以关闭终端窗口并再次打开它以验证安装。若要查看 acme.sh 使用情况信息，请运行下一个命令。acme.sh -h您也可以运行以下命令来检查 acme.sh 版本。acme.sh --version生成证书要为单个域生成单个证书，请运行以下命令。\n将yourdomain.com替换为您注册的域。此外，根据需要将/home/www/yourdomain.com替换为您域的网站根文件夹。acme.sh --issue -d yourdomain.com -w /var/www/yourdomain.com对于共享同一网站根文件夹的多个域&#x2F;子域，您可以运行下一个命令来颁发证书。acme.sh --issue -d yourdomain.com -d www.yourdomain.com -d subdomain.yourdomain.com -w /var/www/yourdomain.com生成的证书将存储在 ~&#x2F;.acme.sh&#x2F;yourdomain.com 中\n使用 acme 在 NGINX 上安装证书通过 acme.sh 脚本生成证书后，下一步是将其安装在NGINX上。首先，创建一个文件夹，将生成的证书复制到该文件夹。sudo mkdir -p /etc/nginx/certs/yourdomain.com运行下一个命令以安装证书。不要忘记将yourdomain.com替换为您注册的域。acme.sh --install-cert -d yourdomain.com --key-file /etc/nginx/certs/yourdomain.com/key.pem --fullchain-file /etc/nginx/certs/yourdomain.com/cert.pem --reloadcmd &quot;service nginx force-reload&quot;更新 NGINX 服务器块文件最后一步是更新域的服务器块文件以包含与 SSL 相关的指令。运行以下命令以编辑服务器块文件。sudo nano /etc/nginx/sites-available/yourdomain.com接下来，添加以下行。\nlisten [::]:443 ssl ipv6only=on;listen 443 ssl;ssl_certificate /etc/nginx/certs/cloudindevs.com/cert.pem;ssl_certificate_key /etc/nginx/certs/cloudindevs.com/key.pem;\n保存更改并关闭文件。使用以下命令重新启动 NGINX：\nsudo systemctl restart nginx在浏览器中访问您的网站，以确认现在已启用安全通信。\n证书续订Let’s Encrypt颁发的证书将每60天自动续订一次。\n但是，如果您愿意，也可以手动续订证书。运行以下命令。\nacme.sh --renew -d yourdomain.com --force若要停止证书续订，请运行以下命令。\nacme.sh --remove -d yourdomain.com升级 acme.sh建议始终使用最新版本的 acme.sh。运行以下命令以确保自动更新 acme.sh。\nacme.sh --upgrade --auto-upgrade若要禁用 acme.sh 的自动升级，请运行下一个命令。\nacme.sh --upgrade --auto-upgrade 0如果您不希望 acme.sh 自动升级，请使用以下命令手动更新它。\nacme.sh --upgrade结论在本指南中，我们描述了使用 Ubuntu 上的 acme.sh shell 脚本从 Let’s Encrypt 获取和续订免费 SSL&#x2F;TLS 证书的步骤。此方法是使用 Certbot 工具的替代方法。我们想听听您使用这些工具的经验。\n","categories":["VPS"],"tags":["ACME","ubuntu","debian"]}]